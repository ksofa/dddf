openapi: 3.1.0
info:
  title: Taska Backend API
  description: API для системы управления проектами и задачами
  version: 1.0.0
  contact:
    name: API Support
    email: support@taska.com

servers:
  - url: http://localhost:3000
    description: Development server

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
        details:
          type: string

    ProjectRequest:
      type: object
      required:
        - companyName
        - contactPerson
        - email
        - projectTitle
        - projectDescription
      properties:
        companyName:
          type: string
          description: Название компании заказчика
        contactPerson:
          type: string
          description: Контактное лицо
        email:
          type: string
          format: email
          description: Email для связи
        phone:
          type: string
          description: Телефон для связи
        projectTitle:
          type: string
          description: Название проекта
        projectDescription:
          type: string
          description: Описание проекта
        budget:
          type: string
          description: Бюджет проекта
        deadline:
          type: string
          description: Желаемый срок выполнения
        requirements:
          type: string
          description: Дополнительные требования

    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        displayName:
          type: string
        roles:
          type: array
          items:
            type: string
            enum: [admin, teamlead, developer, designer, tester]
        position:
          type: string
        department:
          type: string
        isActive:
          type: boolean

    Project:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        clientCompany:
          type: string
        clientContact:
          type: string
        clientEmail:
          type: string
        status:
          type: string
          enum: [active, completed, cancelled]
        teamLead:
          type: string
        teamMembers:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time

paths:
  /api/health:
    get:
      summary: Проверка состояния API
      tags:
        - Health
      security: []
      responses:
        '200':
          description: API работает
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  timestamp:
                    type: string
                  version:
                    type: string

  /api/projects/project-request:
    post:
      summary: Подача заявки на проект (без регистрации)
      tags:
        - Project Requests
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '201':
          description: Заявка успешно отправлена
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/projects/project-requests:
    get:
      summary: Получить все заявки на проекты (только админы)
      tags:
        - Project Requests
      responses:
        '200':
          description: Список заявок
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/ProjectRequest'
                    - type: object
                      properties:
                        id:
                          type: string
                        status:
                          type: string
                          enum: [pending, approved, rejected]
                        createdAt:
                          type: string
                          format: date-time
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/projects/project-requests/{requestId}/approve:
    post:
      summary: Одобрить заявку и создать проект (только админы)
      tags:
        - Project Requests
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                teamLeadId:
                  type: string
                  description: ID тимлида для назначения на проект
      responses:
        '200':
          description: Заявка одобрена и проект создан
        '404':
          description: Заявка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/projects/project-requests/{requestId}/reject:
    post:
      summary: Отклонить заявку (только админы)
      tags:
        - Project Requests
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Причина отклонения
      responses:
        '200':
          description: Заявка отклонена
        '404':
          description: Заявка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/projects/{projectId}/assign-teamlead:
    post:
      summary: Назначить тимлида на проект (только админы)
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - teamLeadId
              properties:
                teamLeadId:
                  type: string
      responses:
        '200':
          description: Тимлид назначен
        '404':
          description: Проект или тимлид не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/projects/{projectId}/add-member:
    post:
      summary: Добавить участника в команду проекта (тимлиды и админы)
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
      responses:
        '200':
          description: Участник добавлен в команду
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users:
    get:
      summary: Получить всех пользователей (только админы)
      tags:
        - Users
      responses:
        '200':
          description: Список пользователей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /api/users/teamleads:
    get:
      summary: Получить всех тимлидов (только админы)
      tags:
        - Users
      responses:
        '200':
          description: Список тимлидов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /api/users/{userId}/assign-role:
    post:
      summary: Назначить роль пользователю (только админы)
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
              properties:
                role:
                  type: string
                  enum: [admin, teamlead, developer, designer, tester]
      responses:
        '200':
          description: Роль назначена
        '400':
          description: Недопустимая роль или пользователь уже имеет эту роль
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users/{userId}/remove-role:
    post:
      summary: Удалить роль у пользователя (только админы)
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
              properties:
                role:
                  type: string
                  enum: [admin, teamlead, developer, designer, tester]
      responses:
        '200':
          description: Роль удалена
        '400':
          description: Пользователь не имеет этой роли
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users/my-team:
    get:
      summary: Получить участников команды (только тимлиды)
      tags:
        - Users
      responses:
        '200':
          description: Список участников команды
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '403':
          description: Доступно только для тимлидов
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/projects:
    get:
      summary: Получить проекты (с учетом ролей)
      tags:
        - Projects
      responses:
        '200':
          description: Список проектов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'

    post:
      summary: Создать проект (только админы)
      tags:
        - Projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - description
              properties:
                title:
                  type: string
                description:
                  type: string
                clientCompany:
                  type: string
                clientContact:
                  type: string
                clientEmail:
                  type: string
                teamLead:
                  type: string
                teamMembers:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Проект создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'

  /api/projects/{id}:
    get:
      summary: Получить проект по ID
      tags:
        - Projects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Данные проекта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '403':
          description: Нет доступа к проекту
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Проект не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Обновить проект (админы и тимлиды)
      tags:
        - Projects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
                  enum: [active, completed, cancelled]
      responses:
        '200':
          description: Проект обновлен
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Удалить проект (только админы)
      tags:
        - Projects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Проект удален
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

tags:
  - name: Health
    description: Проверка состояния API
  - name: Project Requests
    description: Заявки на проекты от заказчиков
  - name: Projects
    description: Управление проектами
  - name: Users
    description: Управление пользователями и ролями 