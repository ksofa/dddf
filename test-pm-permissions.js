// –¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∞–≤ PM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function testPMPermissions() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∞–≤ PM');
  
  // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è PM
  const user = {
    uid: '3zQmIv378cegrTnz5qydFi6p9JH2',
    email: 'pm.data@taska.com',
    roles: ['pm']
  };
  
  // –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞
  const project = {
    id: '8JHAHCKMPrctBDZviiS8',
    manager: '3zQmIv378cegrTnz5qydFi6p9JH2',
    pmId: '3zQmIv378cegrTnz5qydFi6p9JH2',
    teamLead: null
  };
  
  console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user);
  console.log('üìã –ü—Ä–æ–µ–∫—Ç:', project);
  
  // –õ–æ–≥–∏–∫–∞ –∏–∑ frontend (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
  const isUserPM = user && (
    user.roles?.includes('admin') ||
    user.uid === project.manager ||
    user.uid === project.pmId ||
    user.uid === project.teamLead ||
    (user.roles?.includes('pm') && (
      user.uid === project.manager || 
      user.uid === project.pmId ||
      user.uid === project.teamLead
    ))
  );
  
  console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ PM:', {
    isUserPM,
    canCreateTasks: isUserPM || user?.roles?.includes('admin'),
    checks: {
      isAdmin: user.roles?.includes('admin'),
      isManager: user.uid === project.manager,
      isPmId: user.uid === project.pmId,
      isTeamLead: user.uid === project.teamLead,
      hasPmRole: user.roles?.includes('pm'),
      pmRoleAndManager: user.roles?.includes('pm') && user.uid === project.manager,
      pmRoleAndPmId: user.roles?.includes('pm') && user.uid === project.pmId,
      pmRoleAndTeamLead: user.roles?.includes('pm') && user.uid === project.teamLead
    }
  });
  
  if (isUserPM) {
    console.log('üéâ PM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –î–û–õ–ñ–ï–ù –≤–∏–¥–µ—Ç—å –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á!');
  } else {
    console.log('‚ùå PM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –î–û–õ–ñ–ï–ù –≤–∏–¥–µ—Ç—å –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á');
  }
}

testPMPermissions(); 