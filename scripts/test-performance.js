// –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫
const axios = require('axios');

async function testPerformance() {
  console.log('‚ö° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫...\n');
  
  try {
    // 1. –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω
    console.log('1Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞...');
    const loginResponse = await axios.post('http://localhost:3000/api/auth/login', {
      email: 'admin@admin.admin',
      password: 'admin123'
    });
    
    const token = loginResponse.data.token;
    console.log('‚úÖ –ê–¥–º–∏–Ω –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    
    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫...');
    
    const startTime = Date.now();
    
    const applicationsResponse = await axios.get('http://localhost:3000/api/applications', {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Cache-Control': 'no-cache, no-store, must-revalidate',
        'Pragma': 'no-cache',
        'Expires': '0'
      },
      timeout: 30000 // 30 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
    });
    
    const endTime = Date.now();
    const loadTime = endTime - startTime;
    
    console.log('‚úÖ –ó–∞—è–≤–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫: ${applicationsResponse.data.length}`);
    console.log(`‚è±Ô∏è –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: ${loadTime}ms (${(loadTime/1000).toFixed(2)}s)`);
    
    // 3. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    console.log('\nüìà –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:');
    if (loadTime < 5000) {
      console.log('üü¢ –û—Ç–ª–∏—á–Ω–æ! –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–Ω–µ–µ 5 —Å–µ–∫—É–Ω–¥');
    } else if (loadTime < 10000) {
      console.log('üü° –ü—Ä–∏–µ–º–ª–µ–º–æ. –ó–∞–≥—Ä—É–∑–∫–∞ 5-10 —Å–µ–∫—É–Ω–¥');
    } else if (loadTime < 30000) {
      console.log('üü† –ú–µ–¥–ª–µ–Ω–Ω–æ. –ó–∞–≥—Ä—É–∑–∫–∞ 10-30 —Å–µ–∫—É–Ω–¥');
    } else {
      console.log('üî¥ –û—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–æ! –ó–∞–≥—Ä—É–∑–∫–∞ –±–æ–ª–µ–µ 30 —Å–µ–∫—É–Ω–¥');
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
    if (applicationsResponse.data.length > 0) {
      const firstApp = applicationsResponse.data[0];
      console.log('\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–π –∑–∞—è–≤–∫–∏:');
      console.log('- ID:', firstApp.id);
      console.log('- –ù–∞–∑–≤–∞–Ω–∏–µ:', firstApp.projectTitle || '–ù–µ —É–∫–∞–∑–∞–Ω–æ');
      console.log('- –°—Ç–∞—Ç—É—Å:', firstApp.status || '–ù–µ —É–∫–∞–∑–∞–Ω');
      console.log('- –¢–∏–ø:', firstApp.type || '–ù–µ —É–∫–∞–∑–∞–Ω');
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω!');
    
  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê:', error.message);
    
    if (error.code === 'ECONNABORTED') {
      console.error('‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω —Ç–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞');
    }
    
    if (error.response) {
      console.error('üìÑ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.response.status, error.response.data);
    }
    
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testPerformance(); 