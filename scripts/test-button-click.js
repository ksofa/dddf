const axios = require('axios');

const API_BASE = 'http://localhost:3000/api';

async function testButtonFunctionality() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è...\\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞...');
    const healthResponse = await axios.get(`${API_BASE}/health`);
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç:', healthResponse.data);

    // 2. –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ PM
    console.log('\\n2. –õ–æ–≥–∏–Ω –∫–∞–∫ PM...');
    const pmLogin = await axios.post(`${API_BASE}/login`, {
      email: 'pm@test.test',
      password: 'password123'
    });
    const pmToken = pmLogin.data.token;
    console.log('‚úÖ PM –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');

    // 3. –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–∞–Ω–¥—ã PM
    console.log('\\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ PM...');
    const teamsResponse = await axios.get(`${API_BASE}/teams`, {
      headers: { Authorization: `Bearer ${pmToken}` }
    });
    
    const pmTeams = teamsResponse.data;
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–æ–º–∞–Ω–¥: ${pmTeams.length}`);
    
    if (pmTeams.length === 0) {
      console.log('‚ùå –£ PM –Ω–µ—Ç –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }

    const testTeam = pmTeams[0];
    console.log(`üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É: ${testTeam.name || testTeam.title} (ID: ${testTeam.id})`);

    // 4. –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∫–æ–º–∞–Ω–¥—ã
    console.log('\\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const usersResponse = await axios.get(`${API_BASE}/teams/${testTeam.id}/available-users`, {
      headers: { Authorization: `Bearer ${pmToken}` }
    });
    
    const availableUsers = usersResponse.data;
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${availableUsers.length}`);
    
    if (availableUsers.length === 0) {
      console.log('‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è');
      return;
    }

    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    console.log('\\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è...');
    const testUser = availableUsers[0];
    console.log(`üë§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ${testUser.name || testUser.email}`);
    
    const inviteResponse = await axios.post(`${API_BASE}/teams/${testTeam.id}/invite`, {
      receiverId: testUser.id || testUser.uid,
      role: 'developer',
      projectType: 'without_project',
      coverLetter: '–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–æ–º–∞–Ω–¥—É'
    }, {
      headers: { Authorization: `Bearer ${pmToken}` }
    });
    
    console.log('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ:', inviteResponse.data);
    
    console.log('\\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    console.log('\\nüìù –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
    console.log(`   - –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: ‚úÖ`);
    console.log(`   - PM –º–æ–∂–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è: ‚úÖ`);
    console.log(`   - PM –≤–∏–¥–∏—Ç —Å–≤–æ–∏ –∫–æ–º–∞–Ω–¥—ã: ‚úÖ (${pmTeams.length} –∫–æ–º–∞–Ω–¥)`);
    console.log(`   - PM –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ‚úÖ (${availableUsers.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)`);
    console.log(`   - PM –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ: ‚úÖ`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
    
    if (error.response) {
      console.log('\\nüìä –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:');
      console.log(`   - –°—Ç–∞—Ç—É—Å: ${error.response.status}`);
      console.log(`   - –°–æ–æ–±—â–µ–Ω–∏–µ: ${error.response.data?.message || error.response.data}`);
      console.log(`   - URL: ${error.config?.url}`);
    }
  }
}

testButtonFunctionality(); 