const axios = require('axios');

const API_BASE = 'http://localhost:3000/api';

async function testAuthFix() {
  console.log('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...\n');

  try {
    // 1. –õ–æ–≥–∏–Ω–∏–º—Å—è
    console.log('1Ô∏è‚É£ –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω...');
    const loginResponse = await axios.post(`${API_BASE}/auth/login`, {
      email: 'admin@admin.admin',
      password: 'admin123'
    });

    const { token, user } = loginResponse.data;
    console.log('‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω');
    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user.displayName);
    console.log('üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω');

    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–º–∞–Ω–¥...');
    const teamsResponse = await axios.get(`${API_BASE}/teams`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', teamsResponse.data.length);

    if (teamsResponse.data.length > 0) {
      const firstTeam = teamsResponse.data[0];
      console.log('üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É:', firstTeam.name);

      // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º available-users
      console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º available-users...');
      try {
        const usersResponse = await axios.get(`${API_BASE}/teams/${firstTeam.id}/available-users`, {
          headers: { 'Authorization': `Bearer ${token}` }
        });
        console.log('‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', usersResponse.data.length);
        
        if (usersResponse.data.length > 0) {
          console.log('üë• –ü–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', {
            name: usersResponse.data[0].name || usersResponse.data[0].displayName,
            email: usersResponse.data[0].email
          });
        }
      } catch (usersError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ available-users:', usersError.response?.status, usersError.response?.data);
      }

      // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
      console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º...');
      try {
        await axios.get(`${API_BASE}/teams/${firstTeam.id}/available-users`, {
          headers: { 'Authorization': 'Bearer invalid_token' }
        });
        console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ: –∑–∞–ø—Ä–æ—Å —Å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º –ø—Ä–æ—à–µ–ª');
      } catch (invalidTokenError) {
        console.log('‚úÖ –û–∂–∏–¥–∞–µ–º–æ: –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –æ—Ç–∫–ª–æ–Ω–µ–Ω:', invalidTokenError.response?.status);
      }

      // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
      console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑ —Ç–æ–∫–µ–Ω–∞...');
      try {
        await axios.get(`${API_BASE}/teams/${firstTeam.id}/available-users`);
        console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ: –∑–∞–ø—Ä–æ—Å –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ –ø—Ä–æ—à–µ–ª');
      } catch (noTokenError) {
        console.log('‚úÖ –û–∂–∏–¥–∞–µ–º–æ: –∑–∞–ø—Ä–æ—Å –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω:', noTokenError.response?.status);
      }
    }

    // 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—â–∏–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\n6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—â–∏–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    try {
      const allUsersResponse = await axios.get(`${API_BASE}/users`, {
        headers: { 'Authorization': `Bearer ${token}` }
      });
      console.log('‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', allUsersResponse.data.length);
    } catch (allUsersError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', allUsersError.response?.status);
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message);
    if (error.response) {
      console.error('Status:', error.response.status);
      console.error('Data:', error.response.data);
    }
  }
}

testAuthFix().catch(console.error); 