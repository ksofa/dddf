const axios = require('axios');

async function testPMAssignment() {
  try {
    // First, create a test application
    const applicationData = {
      fullName: '–¢–µ—Å—Ç –ö–ª–∏–µ–Ω—Ç',
      phone: '+7 (999) 123-45-67',
      projectTitle: 'API –¢–µ—Å—Ç –ü—Ä–æ–µ–∫—Ç',
      projectDescription: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç —á–µ—Ä–µ–∑ API',
      email: 'test@example.com',
      techSpec: 'React + Node.js'
    };

    console.log('üîÑ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É...');
    const createResponse = await axios.post('http://localhost:3001/api/applications', applicationData);
    const applicationId = createResponse.data.applicationId;
    console.log('‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞:', applicationId);

    // Get admin token (simulate admin login)
    console.log('üîÑ –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∞...');
    const loginResponse = await axios.post('http://localhost:3001/api/auth/login', {
      email: 'admin@taska.com',
      password: 'admin123'
    });
    const adminToken = loginResponse.data.token;
    console.log('‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω');

    // Assign PM to the application
    console.log('üîÑ –ù–∞–∑–Ω–∞—á–∞–µ–º PM...');
    const assignResponse = await axios.post(
      `http://localhost:3001/api/applications/${applicationId}/approve`,
      { pmId: '3zQmIv378cegrTnz5qydFi6p9JH2' },
      { headers: { Authorization: `Bearer ${adminToken}` } }
    );
    
    console.log('‚úÖ PM –Ω–∞–∑–Ω–∞—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìã –û—Ç–≤–µ—Ç:', assignResponse.data);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
    if (error.response?.data) {
      console.error('üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', JSON.stringify(error.response.data, null, 2));
    }
  }
}

console.log('üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ PM —á–µ—Ä–µ–∑ API...\n');
testPMAssignment().then(() => {
  console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
  process.exit(0);
}).catch(console.error); 