const axios = require('axios');

const BASE_URL = 'http://localhost:3000/api';

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ PM
const PM_CREDENTIALS = {
  email: 'pm@test.test',
  password: 'password123'
};

async function testButtonFunctionality() {
  try {
    console.log('üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∫–Ω–æ–ø–æ–∫...\n');

    // 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è PM
    console.log('1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è PM...');
    const loginResponse = await axios.post(`${BASE_URL}/login`, PM_CREDENTIALS);
    const token = loginResponse.data.token;
    console.log('‚úÖ PM –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ\n');

    // 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ PM
    console.log('2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ PM...');
    const teamsResponse = await axios.get(`${BASE_URL}/teams`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    const teams = teamsResponse.data;
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–æ–º–∞–Ω–¥: ${teams.length}`);
    
    if (teams.length === 0) {
      console.log('‚ùå –£ PM –Ω–µ—Ç –∫–æ–º–∞–Ω–¥. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É...');
      
      // –°–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è PM
      const createTeamResponse = await axios.post(`${BASE_URL}/teams`, {
        name: 'Test PM Team',
        description: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è PM',
        icon: 'üöÄ',
        color: 'bg-blue-500'
      }, {
        headers: { Authorization: `Bearer ${token}` }
      });
      
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∞:', createTeamResponse.data.name);
      
      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–∞–Ω–¥—ã —Å–Ω–æ–≤–∞
      const updatedTeamsResponse = await axios.get(`${BASE_URL}/teams`, {
        headers: { Authorization: `Bearer ${token}` }
      });
      const updatedTeams = updatedTeamsResponse.data;
      
      if (updatedTeams.length === 0) {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É');
        return;
      }
      
      teams.push(...updatedTeams);
    }

    const testTeam = teams[0];
    console.log(`üìã –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞: ${testTeam.name} (ID: ${testTeam.id})\n`);

    // 3. –¢–µ—Å—Ç –∫–Ω–æ–ø–∫–∏ "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å" - –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('3. –¢–µ—Å—Ç –∫–Ω–æ–ø–∫–∏ "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å" - –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    try {
      const usersResponse = await axios.get(`${BASE_URL}/teams/${testTeam.id}/available-users`, {
        headers: { Authorization: `Bearer ${token}` }
      });
      const users = usersResponse.data;
      console.log(`‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: ${users.length}`);
      
      if (users.length > 0) {
        const testUser = users[0];
        console.log(`üë§ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${testUser.name || testUser.displayName} (ID: ${testUser.id})`);

        // 4. –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        console.log('4. –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è...');
        const invitationData = {
          receiverId: testUser.id,
          role: 'developer',
          projectType: 'without_project',
          coverLetter: '–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É'
        };

        const inviteResponse = await axios.post(`${BASE_URL}/teams/${testTeam.id}/invite`, invitationData, {
          headers: { Authorization: `Bearer ${token}` }
        });

        console.log('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        console.log(`üìß ID –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: ${inviteResponse.data.invitationId || 'N/A'}`);
      } else {
        console.log('‚ö†Ô∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è');
      }
    } catch (error) {
      if (error.response?.status === 403) {
        console.log('‚ùå –û—à–∏–±–∫–∞ 403: PM –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ');
        console.log('üîß –ü—Ä–æ–±–ª–µ–º–∞: PM –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —á—É–∂–æ–π –∫–æ–º–∞–Ω–¥–µ');
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error.response?.data || error.message);
      }
    }

    console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚úÖ –ö–Ω–æ–ø–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ');
    
    if (teams.length > 0) {
      console.log('‚úÖ PM –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–∏–º –∫–æ–º–∞–Ω–¥–∞–º');
    }
    
    console.log('\nüìù –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –í –ë–†–ê–£–ó–ï–†–ï:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:5173 –∏–ª–∏ http://localhost:5174');
    console.log('2. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ PM: pm@test.test / password123');
    console.log('3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ö–æ–º–∞–Ω–¥—ã"');
    console.log('4. –ù–∞–π–¥–∏—Ç–µ –∫–Ω–æ–ø–∫–∏ "‚ûï –ü–†–ò–ì–õ–ê–°–ò–¢–¨" –∏ "üìß –ü–†–ï–î–õ–û–ñ–ò–¢–¨" –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö –∫–æ–º–∞–Ω–¥');
    console.log('5. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "‚ûï –ü–†–ò–ì–õ–ê–°–ò–¢–¨" - –¥–æ–ª–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å—Å—è –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ');
    console.log('6. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –Ω–∞–∂–º–∏—Ç–µ "üìß –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
    
    if (error.response?.status === 401) {
      console.log('üîê –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π');
    } else if (error.response?.status === 403) {
      console.log('üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞');
    } else if (error.response?.status === 404) {
      console.log('üîç –†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testButtonFunctionality(); 