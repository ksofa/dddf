const { db } = require('../src/config/firebase');

async function fixFirestoreQueries() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ Firestore...');
    
    // 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å—ã —á–∞—Ç–æ–≤ - —É–±–∏—Ä–∞–µ–º —Å–ª–æ–∂–Ω—ã–µ —Å–æ—Å—Ç–∞–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    console.log('\n1Ô∏è‚É£ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ —á–∞—Ç–æ–≤...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
    const projectsSnapshot = await db.collection('projects').get();
    console.log(`–ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: ${projectsSnapshot.size}`);
    
    for (const projectDoc of projectsSnapshot.docs) {
      const projectId = projectDoc.id;
      const projectData = projectDoc.data();
      
      console.log(`\nüìã –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç: ${projectData.title || projectId}`);
      
      // –ü–æ–ª—É—á–∞–µ–º —á–∞—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞ –ø—Ä–æ—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º (–±–µ–∑ —Å–æ—Å—Ç–∞–≤–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤)
      const chatsSnapshot = await db.collection('projects')
        .doc(projectId)
        .collection('chats')
        .get();
      
      console.log(`  üí¨ –ù–∞–π–¥–µ–Ω–æ —á–∞—Ç–æ–≤: ${chatsSnapshot.size}`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —á–∞—Ç–æ–≤ –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤
      for (const chatDoc of chatsSnapshot.docs) {
        const chatData = chatDoc.data();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞
        const updateData = {
          searchableParticipants: chatData.participants || [],
          lastActivity: chatData.updatedAt || chatData.createdAt || new Date(),
          participantCount: (chatData.participants || []).length
        };
        
        await db.collection('projects')
          .doc(projectId)
          .collection('chats')
          .doc(chatDoc.id)
          .update(updateData);
        
        console.log(`    ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —á–∞—Ç: ${chatData.name || chatDoc.id}`);
      }
    }
    
    // 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –≤ –∫–æ–º–∞–Ω–¥—ã
    console.log('\n2Ô∏è‚É£ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π...');
    
    const invitationsSnapshot = await db.collection('team_invitations').get();
    console.log(`–ù–∞–π–¥–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π: ${invitationsSnapshot.size}`);
    
    for (const inviteDoc of invitationsSnapshot.docs) {
      const inviteData = inviteDoc.data();
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞
      const updateData = {
        searchKey: `${inviteData.projectId}_${inviteData.senderId}_${inviteData.status}`,
        createdAtTimestamp: inviteData.createdAt || new Date(),
        statusUpdatedAt: inviteData.updatedAt || inviteData.createdAt || new Date()
      };
      
      await db.collection('team_invitations').doc(inviteDoc.id).update(updateData);
      console.log(`  ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ: ${inviteDoc.id}`);
    }
    
    // 3. –°–æ–∑–¥–∞–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    console.log('\n3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π...');
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const usersSnapshot = await db.collection('users').get();
    
    for (const userDoc of usersSnapshot.docs) {
      const userId = userDoc.id;
      const userData = userDoc.data();
      
      // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —á–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userChats = [];
      
      // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –ø—Ä–æ–µ–∫—Ç–∞–º –∏ –∏—â–µ–º —á–∞—Ç—ã —Å —É—á–∞—Å—Ç–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      for (const projectDoc of projectsSnapshot.docs) {
        const projectId = projectDoc.id;
        
        const chatsSnapshot = await db.collection('projects')
          .doc(projectId)
          .collection('chats')
          .get();
        
        for (const chatDoc of chatsSnapshot.docs) {
          const chatData = chatDoc.data();
          
          if (chatData.participants && chatData.participants.includes(userId)) {
            userChats.push({
              chatId: chatDoc.id,
              projectId: projectId,
              chatName: chatData.name,
              lastActivity: chatData.updatedAt || chatData.createdAt || new Date(),
              type: chatData.type || 'group'
            });
          }
        }
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (userChats.length > 0) {
        await db.collection('user_chats').doc(userId).set({
          userId: userId,
          chats: userChats,
          updatedAt: new Date()
        });
        
        console.log(`  ‚úÖ –°–æ–∑–¥–∞–Ω —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userData.email || userId} (${userChats.length} —á–∞—Ç–æ–≤)`);
      }
    }
    
    console.log('\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ Firestore –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
if (require.main === module) {
  fixFirestoreQueries()
    .then(() => {
      console.log('üéâ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
      process.exit(0);
    })
    .catch(error => {
      console.error('üí• –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞:', error);
      process.exit(1);
    });
}

module.exports = { fixFirestoreQueries }; 