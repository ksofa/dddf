const { db, auth } = require('../src/config/firebase');

async function debugPMAssignment() {
  try {
    console.log('üîÑ –û—Ç–ª–∞–¥–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è PM...');
    
    // 1. –ù–∞–π–¥–µ–º –∑–∞—è–≤–∫—É
    const applicationsSnapshot = await db.collection('applications')
      .where('status', '==', 'pending')
      .limit(1)
      .get();
    
    if (applicationsSnapshot.empty) {
      console.log('‚ùå –ù–µ—Ç –∑–∞—è–≤–æ–∫ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º pending');
      return;
    }
    
    const applicationDoc = applicationsSnapshot.docs[0];
    const applicationData = applicationDoc.data();
    console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∑–∞—è–≤–∫–∞:', applicationDoc.id);
    console.log('üìã –î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏:', {
      projectTitle: applicationData.projectTitle,
      status: applicationData.status
    });
    
    // 2. –ù–∞–π–¥–µ–º PM
    const pmSnapshot = await db.collection('users')
      .where('roles', 'array-contains', 'pm')
      .limit(1)
      .get();
    
    if (pmSnapshot.empty) {
      console.log('‚ùå –ù–µ—Ç PM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
      return;
    }
    
    const pmDoc = pmSnapshot.docs[0];
    const pmData = pmDoc.data();
    console.log('‚úÖ –ù–∞–π–¥–µ–Ω PM:', pmDoc.id);
    console.log('üìã –î–∞–Ω–Ω—ã–µ PM:', {
      displayName: pmData.displayName,
      email: pmData.email,
      roles: pmData.roles
    });
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ PM —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ ID
    const pmCheckDoc = await db.collection('users').doc(pmDoc.id).get();
    if (!pmCheckDoc.exists) {
      console.log('‚ùå PM –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ document ID');
      return;
    }
    console.log('‚úÖ PM –Ω–∞–π–¥–µ–Ω –ø–æ document ID');
    
    // 4. –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –≤—Ä—É—á–Ω—É—é
    console.log('üîÑ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç...');
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º customerInfo —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ undefined –∑–Ω–∞—á–µ–Ω–∏—è
    const customerInfo = {};
    if (applicationData.fullName !== undefined) {
      customerInfo.fullName = applicationData.fullName;
    }
    if (applicationData.phone !== undefined) {
      customerInfo.phone = applicationData.phone;
    }
    if (applicationData.email !== undefined) {
      customerInfo.email = applicationData.email;
    }
    
    const projectData = {
      title: applicationData.projectTitle,
      description: applicationData.projectDescription,
      status: 'active',
      pmId: pmDoc.id,
      manager: pmDoc.id,
      customerId: null,
      customerInfo: Object.keys(customerInfo).length > 0 ? customerInfo : null,
      rate: applicationData.rate || '–î–æ–≥–æ–≤–æ—Ä–Ω–∞—è',
      startDate: applicationData.startDate || null,
      estimatedDuration: applicationData.estimatedDuration || null,
      estimatedDurationUnit: applicationData.estimatedDurationUnit || 'months',
      coverLetter: applicationData.coverLetter || '',
      team: [pmDoc.id],
      teamMembers: [pmDoc.id],
      techSpec: applicationData.techSpec || '',
      techSpecFile: applicationData.techSpecFile || null,
      createdAt: new Date(),
      createdFrom: 'application',
      applicationId: applicationDoc.id
    };
    
    const projectRef = await db.collection('projects').add(projectData);
    console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω:', projectRef.id);
    
    // 5. –û–±–Ω–æ–≤–∏–º –∑–∞—è–≤–∫—É
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞—è–≤–∫—É...');
    
    await db.collection('applications').doc(applicationDoc.id).update({
      status: 'approved',
      approvedAt: new Date(),
      approvedBy: 'test-admin-uid',
      projectId: projectRef.id,
      assignedPM: pmDoc.id,
      assignedTeamLead: pmDoc.id
    });
    
    console.log('‚úÖ –ó–∞—è–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
    
    // 6. –°–æ–∑–¥–∞–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    console.log('üîÑ –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ...');
    
    await db.collection('users').doc(pmDoc.id).collection('notifications').add({
      type: 'project_assigned',
      title: '–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω',
      message: `–í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω –ø—Ä–æ–µ–∫—Ç: ${projectData.title}`,
      projectId: projectRef.id,
      read: false,
      createdAt: new Date()
    });
    
    console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ');
    console.log('üéâ –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ª–∞–¥–∫–∏:', error);
    console.error('üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.message);
    console.error('üìã Stack trace:', error.stack);
  }
}

async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ª–∞–¥–∫—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è PM...\n');
  
  await debugPMAssignment();
  
  console.log('\n‚úÖ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  process.exit(0);
}

main().catch(console.error); 