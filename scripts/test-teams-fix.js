// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
const axios = require('axios');

const API_BASE = 'http://localhost:3000/api';

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –∞–¥–º–∏–Ω–∞
const adminCredentials = {
  email: 'admin@admin.admin',
  password: 'admin123'
};

async function testTeamsFix() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥...\n');
  
  try {
    // 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞
    console.log('1Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞...');
    const loginResponse = await axios.post(`${API_BASE}/auth/login`, adminCredentials);
    const token = loginResponse.data.token;
    console.log('‚úÖ –ê–¥–º–∏–Ω –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ\n');
    
    // 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥
    console.log('2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥...');
    const teamsResponse = await axios.get(`${API_BASE}/teams`, {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Cache-Control': 'no-cache'
      }
    });
    
    const teams = teamsResponse.data;
    console.log(`üìä –ü–æ–ª—É—á–µ–Ω–æ –∫–æ–º–∞–Ω–¥: ${teams.length}\n`);
    
    // 3. –ê–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥—ã
    console.log('3Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –∫–æ–º–∞–Ω–¥:');
    teams.forEach((team, index) => {
      console.log(`\nüìã –ö–æ–º–∞–Ω–¥–∞ ${index + 1}: ${team.name}`);
      console.log(`   ID: ${team.id}`);
      console.log(`   PM: ${team.pm ? `${team.pm.fullName || team.pm.email} (${team.pm.email})` : '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'}`);
      console.log(`   Team Lead: ${team.teamLead ? `${team.teamLead.name || team.teamLead.email}` : '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'}`);
      console.log(`   –£—á–∞—Å—Ç–Ω–∏–∫–∏: ${team.members?.length || 0} —á–µ–ª.`);
      console.log(`   –ü—Ä–æ–µ–∫—Ç ID: ${team.projectId || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
      if (!team.pm && !team.teamLead) {
        console.log('   ‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ –±–µ–∑ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è - –¥–æ–ª–∂–Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Å –∑–∞–≥–ª—É—à–∫–æ–π');
      } else {
        console.log('   ‚úÖ –ö–æ–º–∞–Ω–¥–∞ —Å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º');
      }
    });
    
    // 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥
    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞...');
    for (const team of teams) {
      try {
        const teamDetailResponse = await axios.get(`${API_BASE}/teams/${team.id}`, {
          headers: {
            'Authorization': `Bearer ${token}`,
            'Cache-Control': 'no-cache'
          }
        });
        
        const teamDetail = teamDetailResponse.data;
        console.log(`\nüîç –î–µ—Ç–∞–ª–∏ –∫–æ–º–∞–Ω–¥—ã "${team.name}":`);
        console.log(`   PM: ${teamDetail.pm ? `${teamDetail.pm.fullName || teamDetail.pm.email}` : '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'}`);
        console.log(`   –£—á–∞—Å—Ç–Ω–∏–∫–∏: ${teamDetail.members?.length || 0} —á–µ–ª.`);
        
        if (teamDetail.members && teamDetail.members.length > 0) {
          console.log('   –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:');
          teamDetail.members.forEach(member => {
            console.log(`     - ${member.fullName || member.displayName || member.email} (${member.email})`);
          });
        }
        
      } catch (error) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∫–æ–º–∞–Ω–¥—ã "${team.name}": ${error.message}`);
      }
    }
    
    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    console.log('\n5Ô∏è‚É£ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞:');
    console.log('‚úÖ –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ');
    console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–µ–∑ PM –¥–æ–ª–∂–Ω—ã –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å "–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω"');
    console.log('‚úÖ –ê–¥–º–∏–Ω –¥–æ–ª–∂–µ–Ω –≤–∏–¥–µ—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –Ω–∞–ª–∏—á–∏—è PM');
    console.log('‚úÖ –ö–Ω–æ–ø–∫–∏ "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å" –∏ "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å" –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥');
    
    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.response?.data || error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTeamsFix().then(() => {
  process.exit(0);
}).catch(error => {
  console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
}); 