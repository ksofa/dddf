const { db } = require('../src/config/firebase');

async function checkUsersStructure() {
  try {
    console.log('üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users...');
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é PM
    const usersSnapshot = await db.collection('users')
      .where('roles', 'array-contains', 'pm')
      .limit(5)
      .get();
    
    console.log('üìä –ù–∞–π–¥–µ–Ω–æ PM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', usersSnapshot.size);
    
    usersSnapshot.forEach(doc => {
      const data = doc.data();
      console.log('üë§ PM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:');
      console.log('  - Document ID:', doc.id);
      console.log('  - UID:', data.uid);
      console.log('  - Display Name:', data.displayName);
      console.log('  - Email:', data.email);
      console.log('  - Roles:', data.roles);
      console.log('  ---');
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const specificUserId = '3zQmIv378cegrTnz5qydFi6p9JH2';
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${specificUserId}...`);
    
    const userDoc = await db.collection('users').doc(specificUserId).get();
    if (userDoc.exists) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –ø–æ document ID');
      console.log('üìã –î–∞–Ω–Ω—ã–µ:', userDoc.data());
    } else {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –ø–æ document ID');
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø–æ UID
      const userByUidSnapshot = await db.collection('users')
        .where('uid', '==', specificUserId)
        .get();
      
      if (!userByUidSnapshot.empty) {
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –ø–æ UID');
        userByUidSnapshot.forEach(doc => {
          console.log('üìã Document ID:', doc.id);
          console.log('üìã –î–∞–Ω–Ω—ã–µ:', doc.data());
        });
      } else {
        console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –ø–æ UID');
      }
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã users:', error);
  }
}

async function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫–æ–ª–ª–µ–∫—Ü–∏–∏ users...\n');
  
  await checkUsersStructure();
  
  console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  process.exit(0);
}

main().catch(console.error); 