const axios = require('axios');

const API_BASE_URL = 'http://localhost:3000/api';

async function testSimpleInvitation() {
  try {
    console.log('üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...');
    
    // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    const loginResponse = await axios.post(`${API_BASE_URL}/auth/login`, {
      email: 'admin@test.com',
      password: 'admin123'
    });
    const token = loginResponse.data.token;
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');

    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–∞–Ω–¥—É
    const teamsResponse = await axios.get(`${API_BASE_URL}/teams`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    const teams = teamsResponse.data;
    const testTeam = teams[0];
    console.log(`üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É: ${testTeam.name} (ID: ${testTeam.id})`);

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const usersResponse = await axios.get(`${API_BASE_URL}/teams/${testTeam.id}/available-users`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    const users = usersResponse.data;
    const testUser = users[0];
    console.log(`üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è: ${testUser.fullName || testUser.displayName} (${testUser.email})`);

    // –ü—Ä–æ—Å—Ç–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –±–µ–∑ —Ñ–∞–π–ª–∞
    console.log('\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è...');
    
    const invitationData = {
      receiverId: testUser.id,
      projectType: 'with_project',
      rate: '120000-200000',
      startDate: '2024-02-01',
      estimatedDuration: '3',
      estimatedDurationUnit: 'months',
      coverLetter: '–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ'
    };

    console.log('üìã –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:', invitationData);

    const invitationResponse = await axios.post(
      `${API_BASE_URL}/teams/${testTeam.id}/invite`,
      invitationData,
      {
        headers: {
          Authorization: `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      }
    );

    console.log('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:', invitationResponse.data);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.response?.data || error.message);
    if (error.response) {
      console.error('Status:', error.response.status);
      console.error('Headers:', error.response.headers);
    }
  }
}

testSimpleInvitation(); 