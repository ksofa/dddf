const axios = require('axios');

const API_BASE = 'http://localhost:3000/api';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∞
const ADMIN_CREDENTIALS = {
  email: 'admin@admin.admin',
  password: 'password123'
};

async function checkUsers() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ\n');

    // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞
    console.log('1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∞...');
    const adminLoginResponse = await axios.post(`${API_BASE}/auth/login`, ADMIN_CREDENTIALS);
    const adminToken = adminLoginResponse.data.token;
    console.log('‚úÖ –ê–¥–º–∏–Ω —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const usersResponse = await axios.get(`${API_BASE}/users`, {
      headers: { Authorization: `Bearer ${adminToken}` }
    });

    const users = usersResponse.data;
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n`);

    users.forEach((user, index) => {
      console.log(`${index + 1}. ${user.displayName || user.fullName || '–ë–µ–∑ –∏–º–µ–Ω–∏'}`);
      console.log(`   Email: ${user.email}`);
      console.log(`   UID: ${user.uid || user.id}`);
      console.log(`   –†–æ–ª–∏: ${user.roles ? user.roles.join(', ') : '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}`);
      console.log('');
    });

    // –ò—â–µ–º PM –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
    const pmUsers = users.filter(user => user.roles && user.roles.includes('pm'));
    const executorUsers = users.filter(user => user.roles && user.roles.includes('executor'));

    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   PM: ${pmUsers.length}`);
    console.log(`   –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏: ${executorUsers.length}`);

    if (pmUsers.length > 0) {
      console.log(`\nüë®‚Äçüíº PM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:`);
      pmUsers.forEach(pm => {
        console.log(`   - ${pm.displayName || pm.fullName} (${pm.email})`);
      });
    }

    if (executorUsers.length > 0) {
      console.log(`\nüë®‚Äçüíª –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏:`);
      executorUsers.forEach(executor => {
        console.log(`   - ${executor.displayName || executor.fullName} (${executor.email})`);
      });
    } else {
      console.log(`\n‚ö†Ô∏è  –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.`);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
checkUsers(); 