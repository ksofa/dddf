const axios = require('axios');

const API_BASE = 'http://localhost:3000/api';

async function createPMTeam() {
  console.log('üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è PM\n');

  try {
    // –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ PM
    console.log('1Ô∏è‚É£ –õ–æ–≥–∏–Ω –∫–∞–∫ PM...');
    const loginResponse = await axios.post(`${API_BASE}/login`, {
      email: 'pm@test.test',
      password: 'password123'
    });
    
    const pmToken = loginResponse.data.token;
    const pmUserId = loginResponse.data.user.uid;
    console.log(`‚úÖ PM —É—Å–ø–µ—à–Ω–æ –∑–∞–ª–æ–≥–∏–Ω–∏–ª—Å—è (ID: ${pmUserId})\n`);

    // –°–æ–∑–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—É
    console.log('2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã...');
    const teamData = {
      name: 'PM Test Team',
      description: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ PM',
      projectId: null
    };

    const createResponse = await axios.post(`${API_BASE}/teams`, teamData, {
      headers: {
        'Authorization': `Bearer ${pmToken}`,
        'Content-Type': 'application/json'
      }
    });
    
    console.log(`‚úÖ –ö–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å ID: ${createResponse.data.id}`);
    console.log(`‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ: ${createResponse.data.name}\n`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ PM —Ç–µ–ø–µ—Ä—å –≤–∏–¥–∏—Ç —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É
    console.log('3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—ã...');
    const teamsResponse = await axios.get(`${API_BASE}/teams`, {
      headers: {
        'Authorization': `Bearer ${pmToken}`
      }
    });
    
    console.log(`‚úÖ PM —Ç–µ–ø–µ—Ä—å –≤–∏–¥–∏—Ç ${teamsResponse.data.length} –∫–æ–º–∞–Ω–¥`);
    
    const pmTeams = teamsResponse.data.filter(team => team.pmId === pmUserId);
    console.log(`‚úÖ –ò–∑ –Ω–∏—Ö ${pmTeams.length} –∫–æ–º–∞–Ω–¥ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç PM`);
    
    if (pmTeams.length === teamsResponse.data.length) {
      console.log('‚úÖ PM –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –∫–æ–º–∞–Ω–¥—ã - –ö–û–†–†–ï–ö–¢–ù–û\n');
    } else {
      console.log('‚ùå PM –≤–∏–¥–∏—Ç —á—É–∂–∏–µ –∫–æ–º–∞–Ω–¥—ã - –û–®–ò–ë–ö–ê\n');
    }

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ available-users –¥–ª—è —Å–≤–æ–µ–π –∫–æ–º–∞–Ω–¥—ã
    console.log('4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å–≤–æ–µ–π –∫–æ–º–∞–Ω–¥—ã...');
    try {
      const usersResponse = await axios.get(`${API_BASE}/teams/${createResponse.data.id}/available-users`, {
        headers: {
          'Authorization': `Bearer ${pmToken}`
        }
      });
      
      console.log(`‚úÖ PM –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å ${usersResponse.data.length} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–≤–æ–µ–π –∫–æ–º–∞–Ω–¥—ã\n`);
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${error.response?.data?.error}\n`);
    }

    // –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –¥—Ä—É–≥–æ–π PM –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–æ–ª—è—Ü–∏–∏
    console.log('5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–ª—è—Ü–∏–∏ - –ª–æ–≥–∏–Ω –∫–∞–∫ –¥—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å...');
    try {
      const adminLoginResponse = await axios.post(`${API_BASE}/login`, {
        email: 'admin@admin.admin',
        password: 'admin123'
      });
      
      const adminToken = adminLoginResponse.data.token;
      
      // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∫–æ–º–∞–Ω–¥—ã PM –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∞
      const adminUsersResponse = await axios.get(`${API_BASE}/teams/${createResponse.data.id}/available-users`, {
        headers: {
          'Authorization': `Bearer ${adminToken}`
        }
      });
      
      console.log(`‚úÖ –ê–¥–º–∏–Ω –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å ${adminUsersResponse.data.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∞–¥–º–∏–Ω –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º)\n`);
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–∞ –∞–¥–º–∏–Ω–∞: ${error.response?.data?.error}\n`);
    }

    console.log('üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üìù –°–æ–∑–¥–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: ${createResponse.data.name} (ID: ${createResponse.data.id})`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
createPMTeam(); 