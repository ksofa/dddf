const admin = require('firebase-admin');
require('dotenv').config();

// Initialize Firebase Admin
const serviceAccount = {
  projectId: process.env.FIREBASE_PROJECT_ID,
  privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g, '\n'),
  clientEmail: process.env.FIREBASE_CLIENT_EMAIL
};

admin.initializeApp({
  credential: admin.credential.cert(serviceAccount)
});

const db = admin.firestore();

async function fixPMProjects() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –∫–æ–º–∞–Ω–¥ PM...\n');
    
    // –ù–∞–π—Ç–∏ PM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const usersSnapshot = await db.collection('users')
      .where('email', '==', 'pm@test.test')
      .get();
    
    if (usersSnapshot.empty) {
      console.log('‚ùå PM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    const pmUser = usersSnapshot.docs[0];
    const pmData = pmUser.data();
    console.log('üë§ PM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', pmData.email);
    
    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
    console.log('\nüìã –í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã –≤ —Å–∏—Å—Ç–µ–º–µ:');
    const allProjectsSnapshot = await db.collection('projects').get();
    console.log(`   –í—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: ${allProjectsSnapshot.size}`);
    
    allProjectsSnapshot.forEach(doc => {
      const project = doc.data();
      console.log(`   - ${project.name} (ID: ${doc.id})`);
      console.log(`     PM: ${project.pm?.displayName || project.pm?.name || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
      console.log(`     PM UID: ${project.pm?.uid || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
      console.log('');
    });
    
    // –°–æ–∑–¥–∞—Ç—å 2 —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è PM
    console.log('üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è PM...');
    
    const project1Data = {
      name: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –ú–¢–° –∏ —Å–µ—Ä–≤–∏—Å–∞',
      description: '–ü—Ä–æ–µ–∫—Ç –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –ú–¢–° —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤',
      status: 'active',
      createdAt: admin.firestore.Timestamp.now(),
      updatedAt: admin.firestore.Timestamp.now(),
      pm: {
        uid: pmUser.id,
        name: pmData.displayName || pmData.name || 'PM User',
        displayName: pmData.displayName || pmData.name || 'PM User',
        email: pmData.email,
        role: 'pm'
      },
      budget: 1500000,
      deadline: admin.firestore.Timestamp.fromDate(new Date('2024-12-31')),
      priority: 'high',
      tags: ['web', 'mobile', 'integration'],
      teamSize: 5,
      technologies: ['React', 'Node.js', 'PostgreSQL', 'Docker']
    };
    
    const project2Data = {
      name: '–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥–∞–º–∏',
      description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —É—Å–ª—É–≥–∞–º–∏',
      status: 'active',
      createdAt: admin.firestore.Timestamp.now(),
      updatedAt: admin.firestore.Timestamp.now(),
      pm: {
        uid: pmUser.id,
        name: pmData.displayName || pmData.name || 'PM User',
        displayName: pmData.displayName || pmData.name || 'PM User',
        email: pmData.email,
        role: 'pm'
      },
      budget: 2000000,
      deadline: admin.firestore.Timestamp.fromDate(new Date('2025-06-30')),
      priority: 'medium',
      tags: ['mobile', 'ios', 'android'],
      teamSize: 4,
      technologies: ['React Native', 'Firebase', 'Redux']
    };
    
    // –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã
    const project1Ref = await db.collection('projects').add(project1Data);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ–µ–∫—Ç 1: ${project1Data.name} (ID: ${project1Ref.id})`);
    
    const project2Ref = await db.collection('projects').add(project2Data);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ–µ–∫—Ç 2: ${project2Data.name} (ID: ${project2Ref.id})`);
    
    // –°–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
    console.log('\nüë• –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤...');
    
    const team1Data = {
      name: '–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ú–¢–°',
      description: '–û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –ú–¢–°',
      projectId: project1Ref.id,
      projectName: project1Data.name,
      createdAt: admin.firestore.Timestamp.now(),
      updatedAt: admin.firestore.Timestamp.now(),
      members: [{
        uid: pmUser.id,
        id: pmUser.id,
        name: pmData.displayName || pmData.name || 'PM User',
        displayName: pmData.displayName || pmData.name || 'PM User',
        email: pmData.email,
        role: 'pm',
        joinedAt: admin.firestore.Timestamp.now()
      }],
      teamLead: {
        uid: pmUser.id,
        name: pmData.displayName || pmData.name || 'PM User',
        email: pmData.email,
        role: 'pm'
      },
      status: 'active',
      maxMembers: 8
    };
    
    const team2Data = {
      name: '–ö–æ–º–∞–Ω–¥–∞ –º–æ–±–∏–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
      description: '–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
      projectId: project2Ref.id,
      projectName: project2Data.name,
      createdAt: admin.firestore.Timestamp.now(),
      updatedAt: admin.firestore.Timestamp.now(),
      members: [{
        uid: pmUser.id,
        id: pmUser.id,
        name: pmData.displayName || pmData.name || 'PM User',
        displayName: pmData.displayName || pmData.name || 'PM User',
        email: pmData.email,
        role: 'pm',
        joinedAt: admin.firestore.Timestamp.now()
      }],
      teamLead: {
        uid: pmUser.id,
        name: pmData.displayName || pmData.name || 'PM User',
        email: pmData.email,
        role: 'pm'
      },
      status: 'active',
      maxMembers: 6
    };
    
    // –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—É—é –∫–æ–º–∞–Ω–¥—É –±–µ–∑ –ø—Ä–æ–µ–∫—Ç–∞
    console.log('\nüóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –∫–æ–º–∞–Ω–¥—ã...');
    const oldTeamsSnapshot = await db.collection('teams')
      .where('projectId', '==', null)
      .get();
    
    for (const doc of oldTeamsSnapshot.docs) {
      await doc.ref.delete();
      console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: ${doc.data().name}`);
    }
    
    // –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
    const team1Ref = await db.collection('teams').add(team1Data);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ 1: ${team1Data.name} (ID: ${team1Ref.id})`);
    
    const team2Ref = await db.collection('teams').add(team2Data);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ 2: ${team2Data.name} (ID: ${team2Ref.id})`);
    
    // –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    console.log('\nüßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π...');
    const oldInvitationsSnapshot = await db.collection('team_invitations').get();
    for (const doc of oldInvitationsSnapshot.docs) {
      await doc.ref.delete();
    }
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${oldInvitationsSnapshot.size} —Å—Ç–∞—Ä—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π`);
    
    console.log('\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('üìä –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:');
    console.log(`   - –ü—Ä–æ–µ–∫—Ç–æ–≤ PM: 2`);
    console.log(`   - –ö–æ–º–∞–Ω–¥: 2`);
    console.log(`   - –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π: 0`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏:', error);
  }
}

fixPMProjects().then(() => {
  console.log('\nüéâ –í—Å–µ –≥–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å PM –¥–æ–ª–∂–µ–Ω –≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã –∏ –∫–æ–º–∞–Ω–¥—ã.');
  process.exit(0);
}).catch(error => {
  console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  process.exit(1);
}); 