const axios = require('axios');

const API_BASE = 'http://localhost:3000/api';

async function testTeamMemberSearchFix() {
  console.log('üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π TeamMemberSearch...\n');

  try {
    // 1. –õ–æ–≥–∏–Ω–∏–º—Å—è
    console.log('1Ô∏è‚É£ –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω...');
    const loginResponse = await axios.post(`${API_BASE}/auth/login`, {
      email: 'admin@admin.admin',
      password: 'admin123'
    });

    const { token, user } = loginResponse.data;
    console.log('‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–µ–Ω');
    console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user.displayName);

    // 2. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
    console.log('\n2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥...');
    const teamsResponse = await axios.get(`${API_BASE}/teams`, {
      headers: { 'Authorization': `Bearer ${token}` }
    });
    console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', teamsResponse.data.length);

    if (teamsResponse.data.length > 0) {
      const testTeam = teamsResponse.data[0];
      console.log('üéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É:', testTeam.name, '(ID:', testTeam.id + ')');

      // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥—ã
      console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥—ã...');
      try {
        const teamResponse = await axios.get(`${API_BASE}/teams/${testTeam.id}`, {
          headers: { 'Authorization': `Bearer ${token}` }
        });
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', teamResponse.data.name);
      } catch (teamError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥—ã:', teamError.response?.status);
      }

      // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
      try {
        const usersResponse = await axios.get(`${API_BASE}/teams/${testTeam.id}/available-users`, {
          headers: { 'Authorization': `Bearer ${token}` }
        });
        console.log('‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', usersResponse.data.length);
        
        if (usersResponse.data.length > 0) {
          console.log('üë§ –ü–µ—Ä–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', {
            name: usersResponse.data[0].name || usersResponse.data[0].displayName,
            email: usersResponse.data[0].email
          });
        }
      } catch (usersError) {
        console.log('‚ö†Ô∏è –≠–Ω–¥–ø–æ–∏–Ω—Ç –∫–æ–º–∞–Ω–¥—ã –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Ç–µ—Å—Ç–∏—Ä—É–µ–º fallback...');
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º fallback –Ω–∞ –æ–±—â–∏–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
        try {
          const allUsersResponse = await axios.get(`${API_BASE}/users`, {
            headers: { 'Authorization': `Bearer ${token}` }
          });
          console.log('‚úÖ Fallback —Ä–∞–±–æ—Ç–∞–µ—Ç, –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:', allUsersResponse.data.length);
        } catch (fallbackError) {
          console.error('‚ùå –î–∞–∂–µ fallback –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', fallbackError.response?.status);
        }
      }

      // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –∏—Å—Ç–µ–∫—à–∏–º —Ç–æ–∫–µ–Ω–æ–º
      console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º...');
      try {
        await axios.get(`${API_BASE}/teams/${testTeam.id}`, {
          headers: { 'Authorization': 'Bearer invalid_token_12345' }
        });
        console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ: –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –ø—Ä–æ—à–µ–ª');
      } catch (invalidError) {
        console.log('‚úÖ –û–∂–∏–¥–∞–µ–º–æ: –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –æ—Ç–∫–ª–æ–Ω–µ–Ω:', invalidError.response?.status);
      }

      // 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
      console.log('\n6Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑ —Ç–æ–∫–µ–Ω–∞...');
      try {
        await axios.get(`${API_BASE}/teams/${testTeam.id}`);
        console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ: –∑–∞–ø—Ä–æ—Å –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ –ø—Ä–æ—à–µ–ª');
      } catch (noTokenError) {
        console.log('‚úÖ –û–∂–∏–¥–∞–µ–º–æ: –∑–∞–ø—Ä–æ—Å –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω:', noTokenError.response?.status);
      }
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
    console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–∞–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥—ã —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç (—Å fallback)');
    console.log('‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç');

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message);
    if (error.response) {
      console.error('Status:', error.response.status);
      console.error('Data:', error.response.data);
    }
  }
}

testTeamMemberSearchFix().catch(console.error); 