const axios = require('axios');

const BASE_URL = 'http://localhost:3000/api';

async function debugChatCreation() {
  try {
    // 1. –õ–æ–≥–∏–Ω PM
    console.log('üîê –õ–æ–≥–∏–Ω PM...');
    const loginResponse = await axios.post(`${BASE_URL}/auth/login`, {
      email: 'pm@test.test',
      password: 'password123'
    });
    
    const token = loginResponse.data.token;
    console.log('‚úÖ PM –∑–∞–ª–æ–≥–∏–Ω–µ–Ω');

    // 2. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã
    console.log('\nüìã –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã...');
    const projectsResponse = await axios.get(`${BASE_URL}/projects`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    const project = projectsResponse.data[0];
    console.log(`‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–µ–∫—Ç: ${project.title} (${project.id})`);

    // 3. –°–æ–∑–¥–∞–µ–º —á–∞—Ç
    console.log('\nüí¨ –°–æ–∑–¥–∞–µ–º —á–∞—Ç...');
    const createChatResponse = await axios.post(`${BASE_URL}/projects/${project.id}/chats`, {
      name: 'Debug Test Chat',
      type: 'group',
      participants: ['QH040Apx3segNZ9zHJrLP8y4UPD2']
    }, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    console.log('‚úÖ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:');
    console.log(JSON.stringify(createChatResponse.data, null, 2));

    // 4. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
    console.log('\nüì® –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤...');
    const chatsResponse = await axios.get(`${BASE_URL}/projects/${project.id}/chats`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${chatsResponse.data.length} —á–∞—Ç–æ–≤:`);
    chatsResponse.data.forEach((chat, index) => {
      console.log(`${index + 1}. ${chat.name} (ID: ${chat.id})`);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
    if (error.response?.status) {
      console.error(`HTTP Status: ${error.response.status}`);
    }
  }
}

debugChatCreation(); 