const axios = require('axios');

const API_BASE = 'http://localhost:3000/api';

// PM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
const PM_EMAIL = 'pm@mail.ru';
const PM_PASSWORD = '123456';

async function debugProjectStructure() {
  try {
    console.log('üîç –û—Ç–ª–∞–¥–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...\n');

    // 1. –õ–æ–≥–∏–Ω PM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('1. –õ–æ–≥–∏–Ω PM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const loginResponse = await axios.post(`${API_BASE}/auth/login`, {
      email: PM_EMAIL,
      password: PM_PASSWORD
    });

    const { token, user } = loginResponse.data;
    console.log('‚úÖ PM —É—Å–ø–µ—à–Ω–æ –∑–∞–ª–æ–≥–∏–Ω–∏–ª—Å—è:', {
      uid: user.uid,
      email: user.email,
      roles: user.roles
    });

    const headers = { Authorization: `Bearer ${token}` };

    // 2. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã PM
    console.log('\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤ PM...');
    const projectsResponse = await axios.get(`${API_BASE}/projects`, { headers });
    const projects = projectsResponse.data;
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${projects.length} –ø—Ä–æ–µ–∫—Ç–æ–≤`);
    
    if (projects.length === 0) {
      console.log('‚ùå –£ PM –Ω–µ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
    const testProject = projects[0];
    console.log('\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:');
    console.log(JSON.stringify(testProject, null, 2));

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –ø–æ–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–µ–π –º–µ–Ω–µ–¥–∂–µ—Ä–∞:');
    console.log('project.manager:', testProject.manager);
    console.log('project.pmId:', testProject.pmId);
    console.log('project.managerId:', testProject.managerId);
    console.log('project.pm:', testProject.pm);
    console.log('user.uid:', user.uid);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è:');
    console.log('manager === user.uid:', testProject.manager === user.uid);
    console.log('pmId === user.uid:', testProject.pmId === user.uid);
    console.log('managerId === user.uid:', testProject.managerId === user.uid);
    console.log('pm === user.uid:', testProject.pm === user.uid);

    // 4. –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ–µ–∫—Ç–∞ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    console.log('\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–µ–∫—Ç–∞...');
    try {
      const teamResponse = await axios.get(`${API_BASE}/projects/${testProject.id}/team`, { headers });
      const teamData = teamResponse.data;
      
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—É—á–µ–Ω—ã:');
      console.log(JSON.stringify(teamData, null, 2));
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã:', error.response?.data || error.message);
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
    console.log('\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ PM...');
    projects.forEach((project, index) => {
      console.log(`\n–ü—Ä–æ–µ–∫—Ç ${index + 1}: ${project.title}`);
      console.log(`  ID: ${project.id}`);
      console.log(`  manager: ${project.manager}`);
      console.log(`  pmId: ${project.pmId}`);
      console.log(`  managerId: ${project.managerId}`);
      console.log(`  pm: ${project.pm}`);
      console.log(`  –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ pmId: ${project.pmId === user.uid}`);
      console.log(`  –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ manager: ${project.manager === user.uid}`);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ª–∞–¥–∫–µ:', error.response?.data || error.message);
  }
}

debugProjectStructure(); 