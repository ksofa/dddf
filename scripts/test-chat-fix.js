const axios = require('axios');

const BASE_URL = 'http://localhost:3000/api';

async function testChatFix() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–≤...\n');

    // 1. –õ–æ–≥–∏–Ω PM
    console.log('1Ô∏è‚É£ –õ–æ–≥–∏–Ω PM...');
    const pmLoginResponse = await axios.post(`${BASE_URL}/auth/login`, {
      email: 'pm@test.test',
      password: 'password123'
    });
    const pmToken = pmLoginResponse.data.token;
    console.log('‚úÖ PM –∑–∞–ª–æ–≥–∏–Ω–µ–Ω');

    // 2. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã
    console.log('\n2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã...');
    const projectsResponse = await axios.get(`${BASE_URL}/projects`, {
      headers: { Authorization: `Bearer ${pmToken}` }
    });
    const project = projectsResponse.data[0];
    console.log(`‚úÖ –í—ã–±—Ä–∞–Ω –ø—Ä–æ–µ–∫—Ç: ${project.title} (${project.id})`);

    // 3. –ü–æ–ª—É—á–∞–µ–º —á–∞—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞
    console.log('\n3Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —á–∞—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞...');
    const chatsResponse = await axios.get(`${BASE_URL}/projects/${project.id}/chats`, {
      headers: { Authorization: `Bearer ${pmToken}` }
    });
    console.log(`‚úÖ –ß–∞—Ç–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ: ${chatsResponse.data.length}`);
    
    if (chatsResponse.data.length > 0) {
      const chat = chatsResponse.data[0];
      console.log(`üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º —á–∞—Ç: ${chat.name} (${chat.id})`);
      
      // 4. –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞ (—ç—Ç–æ –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–µ–ø–µ—Ä—å)
      console.log('\n4Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞...');
      const messagesResponse = await axios.get(`${BASE_URL}/projects/${project.id}/chats/${chat.id}/messages`, {
        headers: { Authorization: `Bearer ${pmToken}` }
      });
      console.log(`‚úÖ –°–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ: ${messagesResponse.data.length}`);
      
      if (messagesResponse.data.length > 0) {
        console.log('üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 —Å–æ–æ–±—â–µ–Ω–∏—è:');
        messagesResponse.data.slice(0, 3).forEach((msg, index) => {
          console.log(`   ${index + 1}. [${msg.sender?.name || 'Unknown'}]: ${msg.text}`);
        });
      }
      
      // 5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      console.log('\n5Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...');
      const sendMessageResponse = await axios.post(`${BASE_URL}/projects/${project.id}/chats/${chat.id}/messages`, {
        text: `–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç PM - ${new Date().toLocaleTimeString()}`
      }, {
        headers: { Authorization: `Bearer ${pmToken}` }
      });
      console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', sendMessageResponse.data.message);
      
      // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—è–≤–∏–ª–æ—Å—å
      console.log('\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...');
      const updatedMessagesResponse = await axios.get(`${BASE_URL}/projects/${project.id}/chats/${chat.id}/messages`, {
        headers: { Authorization: `Bearer ${pmToken}` }
      });
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${updatedMessagesResponse.data.length}`);
      
      const lastMessage = updatedMessagesResponse.data[0];
      if (lastMessage) {
        console.log(`üìù –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: [${lastMessage.sender?.name || 'Unknown'}]: ${lastMessage.text}`);
      }
    } else {
      console.log('‚ö†Ô∏è –ù–µ—Ç —á–∞—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö:', error.response?.data || error.message);
    if (error.response?.status) {
      console.error(`HTTP Status: ${error.response.status}`);
    }
  }
}

// –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
setTimeout(testChatFix, 3000); 