const axios = require('axios');

const API_BASE = 'http://localhost:3000/api';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const PM_TOKEN = 'pm-test-token';
const ADMIN_TOKEN = 'admin-test-token';

async function testTeamInvitations() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –≤ –∫–æ–º–∞–Ω–¥—É...\n');

  try {
    // 1. –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ PM
    console.log('1. –õ–æ–≥–∏–Ω –∫–∞–∫ PM...');
    const pmLogin = await axios.post(`${API_BASE}/login`, {
      email: 'pm@test.test',
      password: 'password123'
    });
    const pmToken = pmLogin.data.token;
    console.log('‚úÖ PM –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');

    // 2. –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–∞–Ω–¥—ã PM
    console.log('\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ PM...');
    const teamsResponse = await axios.get(`${API_BASE}/teams`, {
      headers: { Authorization: `Bearer ${pmToken}` }
    });
    
    const pmTeams = teamsResponse.data;
    console.log(`‚úÖ PM –≤–∏–¥–∏—Ç ${pmTeams.length} –∫–æ–º–∞–Ω–¥`);
    
    if (pmTeams.length === 0) {
      console.log('‚ùå –£ PM –Ω–µ—Ç –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }

    const testTeam = pmTeams[0];
    console.log(`üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É: ${testTeam.name} (ID: ${testTeam.id})`);

    // 3. –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∫–æ–º–∞–Ω–¥—ã
    console.log('\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const availableUsersResponse = await axios.get(`${API_BASE}/teams/${testTeam.id}/available-users`, {
      headers: { Authorization: `Bearer ${pmToken}` }
    });
    
    const availableUsers = availableUsersResponse.data;
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${availableUsers.length} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    
    if (availableUsers.length === 0) {
      console.log('‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è');
      return;
    }

    // 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–º—É –¥–æ—Å—Ç—É–ø–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    const targetUser = availableUsers[0];
    console.log(`\n4. –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: ${targetUser.name || targetUser.email}`);
    
    const invitationResponse = await axios.post(`${API_BASE}/teams/${testTeam.id}/invite`, {
      receiverId: targetUser.id || targetUser.uid,
      role: 'developer',
      projectType: 'without_project',
      coverLetter: '–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–æ–º–∞–Ω–¥—É'
    }, {
      headers: { Authorization: `Bearer ${pmToken}` }
    });
    
    console.log('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üìß ID –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: ${invitationResponse.data.invitationId}`);

    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ - PM –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –æ—Ç —á—É–∂–∏—Ö –∫–æ–º–∞–Ω–¥
    console.log('\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –¥–æ—Å—Ç—É–ø–∞...');
    
    // –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã
    const adminLogin = await axios.post(`${API_BASE}/login`, {
      email: 'admin@admin.admin',
      password: 'admin123'
    });
    const adminToken = adminLogin.data.token;
    
    const allTeamsResponse = await axios.get(`${API_BASE}/teams`, {
      headers: { Authorization: `Bearer ${adminToken}` }
    });
    
    const allTeams = allTeamsResponse.data;
    const otherTeam = allTeams.find(team => team.id !== testTeam.id);
    
    if (otherTeam) {
      console.log(`üîí –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç —á—É–∂–æ–π –∫–æ–º–∞–Ω–¥—ã: ${otherTeam.name}`);
      
      try {
        await axios.post(`${API_BASE}/teams/${otherTeam.id}/invite`, {
          receiverId: targetUser.id || targetUser.uid,
          role: 'developer',
          projectType: 'without_project',
          coverLetter: '–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç —á—É–∂–æ–π –∫–æ–º–∞–Ω–¥—ã'
        }, {
          headers: { Authorization: `Bearer ${pmToken}` }
        });
        
        console.log('‚ùå –û–®–ò–ë–ö–ê: PM —Å–º–æ–≥ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç —á—É–∂–æ–π –∫–æ–º–∞–Ω–¥—ã!');
      } catch (error) {
        if (error.response?.status === 403) {
          console.log('‚úÖ –î–æ—Å—Ç—É–ø –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω - PM –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –æ—Ç —á—É–∂–∏—Ö –∫–æ–º–∞–Ω–¥');
        } else {
          console.log(`‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: ${error.response?.status} - ${error.response?.data?.error}`);
        }
      }
    }

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
    console.log('‚úÖ PM –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –æ—Ç —Å–≤–æ–∏—Ö –∫–æ–º–∞–Ω–¥');
    console.log('‚úÖ PM –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –æ—Ç —á—É–∂–∏—Ö –∫–æ–º–∞–Ω–¥');
    console.log('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTeamInvitations(); 