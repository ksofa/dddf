const axios = require('axios');

const BASE_URL = 'http://localhost:3000/api';

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ PM
const PM_CREDENTIALS = {
  email: 'pm@test.test',
  password: 'password123'
};

async function testInvitationButton() {
  try {
    console.log('üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è...\n');

    // 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è PM
    console.log('1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è PM...');
    const loginResponse = await axios.post(`${BASE_URL}/login`, PM_CREDENTIALS);
    const token = loginResponse.data.token;
    console.log('‚úÖ PM –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ\n');

    // 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ PM
    console.log('2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ PM...');
    const teamsResponse = await axios.get(`${BASE_URL}/teams`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    const teams = teamsResponse.data;
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–æ–º–∞–Ω–¥: ${teams.length}`);
    
    if (teams.length === 0) {
      console.log('‚ùå –£ PM –Ω–µ—Ç –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }

    const testTeam = teams[0];
    console.log(`üìã –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞: ${testTeam.name} (ID: ${testTeam.id})\n`);

    // 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('3. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const usersResponse = await axios.get(`${BASE_URL}/teams/${testTeam.id}/available-users`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    const users = usersResponse.data;
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`);
    
    if (users.length === 0) {
      console.log('‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è');
      return;
    }

    const testUser = users[0];
    console.log(`üë§ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${testUser.name || testUser.displayName} (ID: ${testUser.id})\n`);

    // 4. –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è (–∏–º–∏—Ç–∞—Ü–∏—è –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏)
    console.log('4. –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è (–∏–º–∏—Ç–∞—Ü–∏—è –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏)...');
    const invitationData = {
      receiverId: testUser.id,
      role: 'developer',
      projectType: 'without_project',
      coverLetter: '–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–æ–º–∞–Ω–¥—É —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É'
    };

    const inviteResponse = await axios.post(`${BASE_URL}/teams/${testTeam.id}/invite`, invitationData, {
      headers: { Authorization: `Bearer ${token}` }
    });

    console.log('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üìß ID –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: ${inviteResponse.data.invitationId}`);
    console.log(`üìã –°—Ç–∞—Ç—É—Å: ${inviteResponse.data.status}\n`);

    console.log('üéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù! –ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
    console.log('üîß –í—Å–µ SVG-–æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã, —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
    
    if (error.response?.status === 401) {
      console.log('üîê –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π');
    } else if (error.response?.status === 403) {
      console.log('üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞');
    } else if (error.response?.status === 404) {
      console.log('üîç –†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testInvitationButton(); 