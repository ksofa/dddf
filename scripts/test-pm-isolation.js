const axios = require('axios');

const API_BASE = 'http://localhost:3000/api';

async function testPMIsolation() {
  console.log('üîí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–ª—è—Ü–∏–∏ PM –æ—Ç —á—É–∂–∏—Ö –∫–æ–º–∞–Ω–¥\n');

  try {
    // –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ PM
    console.log('1Ô∏è‚É£ –õ–æ–≥–∏–Ω –∫–∞–∫ PM...');
    const pmLoginResponse = await axios.post(`${API_BASE}/login`, {
      email: 'pm@test.test',
      password: 'password123'
    });
    
    const pmToken = pmLoginResponse.data.token;
    const pmUserId = pmLoginResponse.data.user.uid;
    console.log(`‚úÖ PM —É—Å–ø–µ—à–Ω–æ –∑–∞–ª–æ–≥–∏–Ω–∏–ª—Å—è (ID: ${pmUserId})\n`);

    // –õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
    console.log('2Ô∏è‚É£ –õ–æ–≥–∏–Ω –∫–∞–∫ –∞–¥–º–∏–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥...');
    const adminLoginResponse = await axios.post(`${API_BASE}/login`, {
      email: 'admin@admin.admin',
      password: 'admin123'
    });
    
    const adminToken = adminLoginResponse.data.token;
    console.log('‚úÖ –ê–¥–º–∏–Ω —É—Å–ø–µ—à–Ω–æ –∑–∞–ª–æ–≥–∏–Ω–∏–ª—Å—è\n');

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∞
    const allTeamsResponse = await axios.get(`${API_BASE}/teams`, {
      headers: {
        'Authorization': `Bearer ${adminToken}`
      }
    });
    
    console.log(`üìã –í—Å–µ–≥–æ –∫–æ–º–∞–Ω–¥ –≤ —Å–∏—Å—Ç–µ–º–µ: ${allTeamsResponse.data.length}`);
    
    // –ù–∞—Ö–æ–¥–∏–º –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –ù–ï –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç PM
    const otherTeams = allTeamsResponse.data.filter(team => team.pmId !== pmUserId);
    console.log(`üö´ –ö–æ–º–∞–Ω–¥ –¥—Ä—É–≥–∏—Ö PM: ${otherTeams.length}\n`);

    if (otherTeams.length === 0) {
      console.log('‚ö†Ô∏è –ù–µ—Ç –∫–æ–º–∞–Ω–¥ –¥—Ä—É–≥–∏—Ö PM –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–ª—è—Ü–∏–∏');
      return;
    }

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ø—ã—Ç–∫—É PM –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —á—É–∂–æ–π –∫–æ–º–∞–Ω–¥–µ
    const otherTeam = otherTeams[0];
    console.log(`3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ PM –∫ —á—É–∂–æ–π –∫–æ–º–∞–Ω–¥–µ "${otherTeam.name}" (ID: ${otherTeam.id})...`);

    // –¢–µ—Å—Ç 1: –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —á—É–∂–æ–π –∫–æ–º–∞–Ω–¥—ã
    console.log('   üìù –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á—É–∂–æ–π –∫–æ–º–∞–Ω–¥—ã...');
    try {
      await axios.get(`${API_BASE}/teams/${otherTeam.id}/available-users`, {
        headers: {
          'Authorization': `Bearer ${pmToken}`
        }
      });
      console.log('   ‚ùå PM –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —á—É–∂–æ–π –∫–æ–º–∞–Ω–¥—ã - –û–®–ò–ë–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò!');
    } catch (error) {
      if (error.response?.status === 403) {
        console.log('   ‚úÖ PM –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á—É–∂–æ–π –∫–æ–º–∞–Ω–¥—ã - –ö–û–†–†–ï–ö–¢–ù–û');
      } else {
        console.log(`   ‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: ${error.response?.status} - ${error.response?.data?.error}`);
      }
    }

    // –¢–µ—Å—Ç 2: –ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ —á—É–∂—É—é –∫–æ–º–∞–Ω–¥—É
    console.log('   üìù –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ —á—É–∂—É—é –∫–æ–º–∞–Ω–¥—É...');
    try {
      await axios.post(`${API_BASE}/teams/${otherTeam.id}/members`, {
        userId: pmUserId, // –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Å–µ–±—è
        role: 'developer'
      }, {
        headers: {
          'Authorization': `Bearer ${pmToken}`,
          'Content-Type': 'application/json'
        }
      });
      console.log('   ‚ùå PM –¥–æ–±–∞–≤–∏–ª —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ —á—É–∂—É—é –∫–æ–º–∞–Ω–¥—É - –û–®–ò–ë–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò!');
    } catch (error) {
      if (error.response?.status === 403) {
        console.log('   ‚úÖ PM –Ω–µ –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ —á—É–∂—É—é –∫–æ–º–∞–Ω–¥—É - –ö–û–†–†–ï–ö–¢–ù–û');
      } else {
        console.log(`   ‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: ${error.response?.status} - ${error.response?.data?.error}`);
      }
    }

    // –¢–µ—Å—Ç 3: –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ —á—É–∂–æ–π –∫–æ–º–∞–Ω–¥—ã
    console.log('   üìù –¢–µ—Å—Ç 3: –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –æ—Ç –∏–º–µ–Ω–∏ —á—É–∂–æ–π –∫–æ–º–∞–Ω–¥—ã...');
    try {
      await axios.post(`${API_BASE}/teams/${otherTeam.id}/invite`, {
        receiverId: 'test-user-id',
        projectType: 'without_project',
        rate: '1000',
        coverLetter: '–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ'
      }, {
        headers: {
          'Authorization': `Bearer ${pmToken}`,
          'Content-Type': 'application/json'
        }
      });
      console.log('   ‚ùå PM –æ—Ç–ø—Ä–∞–≤–∏–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ —á—É–∂–æ–π –∫–æ–º–∞–Ω–¥—ã - –û–®–ò–ë–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò!');
    } catch (error) {
      if (error.response?.status === 403) {
        console.log('   ‚úÖ PM –Ω–µ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ —á—É–∂–æ–π –∫–æ–º–∞–Ω–¥—ã - –ö–û–†–†–ï–ö–¢–ù–û');
      } else {
        console.log(`   ‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: ${error.response?.status} - ${error.response?.data?.error}`);
      }
    }

    console.log('\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–ª—è—Ü–∏–∏:');
    console.log('‚úÖ PM –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω –æ—Ç —á—É–∂–∏—Ö –∫–æ–º–∞–Ω–¥');
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testPMIsolation(); 