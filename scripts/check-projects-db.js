const { db, admin } = require('../src/config/firebase');

async function checkAndCreateProjects() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
    const projectsSnapshot = await db.collection('projects').get();
    console.log(`üìä –í—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –±–∞–∑–µ: ${projectsSnapshot.size}`);

    if (projectsSnapshot.size > 0) {
      console.log('\nüìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã:');
      projectsSnapshot.forEach(doc => {
        const project = doc.data();
        console.log(`- ID: ${doc.id}`);
        console.log(`  –ù–∞–∑–≤–∞–Ω–∏–µ: ${project.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}`);
        console.log(`  PM ID: ${project.pmId || '–Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'}`);
        console.log(`  Team Lead: ${project.teamLead || '–Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'}`);
        console.log(`  –ö–æ–º–∞–Ω–¥–∞: ${project.teamMembers?.length || 0} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤`);
        console.log(`  –°—Ç–∞—Ç—É—Å: ${project.status || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log('');
      });
    }

    // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è PM
    const pmEmail = 'pm@test.test';
    const pmUser = await admin.auth().getUserByEmail(pmEmail);
    const pmId = pmUser.uid;
    console.log(`üë§ PM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${pmEmail} (ID: ${pmId})`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è —ç—Ç–æ–≥–æ PM
    const pmProjectsSnapshot = await db.collection('projects')
      .where('pmId', '==', pmId)
      .get();
    
    console.log(`üìä –ü—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è PM: ${pmProjectsSnapshot.size}`);

    if (pmProjectsSnapshot.size === 0) {
      console.log('\nüîß –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è PM...');
      
      const projectData = {
        title: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è PM',
        description: '–ü—Ä–æ–µ–∫—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ PM',
        status: 'active',
        stage: 'development',
        pmId: pmId,
        teamLead: pmId,
        teamMembers: [pmId],
        clientCompany: '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è',
        clientContact: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç',
        clientEmail: 'client@test.com',
        budget: '100000',
        createdAt: new Date(),
        updatedAt: new Date(),
        createdBy: pmId
      };

      const projectRef = await db.collection('projects').add(projectData);
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ–µ–∫—Ç —Å ID: ${projectRef.id}`);

      // –°–æ–∑–¥–∞–µ–º —á–∞—Ç—ã –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
      console.log('üí¨ –°–æ–∑–¥–∞–µ–º —á–∞—Ç—ã –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞...');
      
      const teamChatData = {
        name: `–û–±—â–∏–π —á–∞—Ç –∫–æ–º–∞–Ω–¥—ã - ${projectData.title}`,
        type: 'group',
        participants: [pmId],
        createdBy: pmId,
        createdAt: new Date(),
        updatedAt: new Date(),
        isTeamChat: true
      };

      const teamChatRef = await db.collection('projects')
        .doc(projectRef.id)
        .collection('chats')
        .add(teamChatData);

      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –∫–æ–º–∞–Ω–¥–Ω—ã–π —á–∞—Ç: ${teamChatRef.id}`);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—â–µ —Ä–∞–∑
    console.log('\nüîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è PM...');
    const finalCheck = await db.collection('projects')
      .where('pmId', '==', pmId)
      .get();
    
    console.log(`üìä –ò—Ç–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è PM: ${finalCheck.size}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

checkAndCreateProjects(); 