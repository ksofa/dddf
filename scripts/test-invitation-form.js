const axios = require('axios');
const FormData = require('form-data');
const fs = require('fs');
const path = require('path');

const API_BASE_URL = 'http://localhost:3000/api';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testCredentials = {
  email: 'admin@test.com',
  password: 'admin123'
};

async function testInvitationForm() {
  try {
    console.log('üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...');
    
    // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    const loginResponse = await axios.post(`${API_BASE_URL}/auth/login`, testCredentials);
    const token = loginResponse.data.token;
    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');

    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
    console.log('\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥...');
    const teamsResponse = await axios.get(`${API_BASE_URL}/teams`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    const teams = teamsResponse.data;
    const testTeam = teams[0];
    console.log(`üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É: ${testTeam.name} (ID: ${testTeam.id})`);

    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('\nüë• –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const usersResponse = await axios.get(`${API_BASE_URL}/teams/${testTeam.id}/available-users`, {
      headers: { Authorization: `Bearer ${token}` }
    });
    
    const users = usersResponse.data;
    const testUser = users[0];
    console.log(`üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è: ${testUser.name} (ID: ${testUser.id})`);

    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    const techSpecPath = path.join(__dirname, '../test-tech-spec.txt');
    console.log('\nüìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª –¢–ó:', techSpecPath);
    
    if (!fs.existsSync(techSpecPath)) {
      console.log('‚ùå –§–∞–π–ª –¢–ó –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    console.log('‚úÖ –§–∞–π–ª –¢–ó –Ω–∞–π–¥–µ–Ω');

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å –ø–æ–ª–Ω–æ–π —Ñ–æ—Ä–º–æ–π –∏ —Ñ–∞–π–ª–æ–º
    console.log('\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —Å –ø–æ–ª–Ω–æ–π —Ñ–æ—Ä–º–æ–π –∏ —Ñ–∞–π–ª–æ–º...');
    
    const formData = new FormData();
    formData.append('receiverId', testUser.id);
    formData.append('projectType', 'with_project');
    formData.append('rate', '150000-250000');
    formData.append('startDate', '2025-07-01');
    formData.append('estimatedDuration', '6');
    formData.append('estimatedDurationUnit', 'months');
    formData.append('coverLetter', `–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–æ–º–∞–Ω–¥—É "${testTeam.name}"

–£–≤–∞–∂–∞–µ–º—ã–π ${testUser.name}!

–ú—ã —Ä–∞–¥—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ "–¢–∞—Å–∫–∞".

üéØ –û –ø—Ä–æ–µ–∫—Ç–µ:
–ú—ã —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –∑–∞–¥–∞—á–∞–º–∏, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –∫–æ–º–∞–Ω–¥–∞–º —Ä–∞–±–æ—Ç–∞—Ç—å –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∏ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–æ.

üíº –ß—Ç–æ –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:
‚Ä¢ –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—É—é –∑–∞—Ä–∞–±–æ—Ç–Ω—É—é –ø–ª–∞—Ç—É: 150,000 - 250,000 ‚ÇΩ
‚Ä¢ –†–∞–±–æ—Ç—É —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏ (React, TypeScript, Node.js)
‚Ä¢ –ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã
‚Ä¢ –î—Ä—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤
‚Ä¢ –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏

üìã –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ:
–ü–æ–¥—Ä–æ–±–Ω–æ–µ –¢–ó –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ –∫ —ç—Ç–æ–º—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é. –í –Ω–µ–º –æ–ø–∏—Å–∞–Ω—ã –≤—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø—Ä–æ–µ–∫—Ç—É, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫ –∏ —ç—Ç–∞–ø—ã —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.

‚è∞ –°—Ä–æ–∫–∏:
–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π —Å—Ç–∞—Ä—Ç –ø—Ä–æ–µ–∫—Ç–∞: 1 –∏—é–ª—è 2025 –≥–æ–¥–∞
–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 6 –º–µ—Å—è—Ü–µ–≤

–ú—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –≤–∞—à–∏ –Ω–∞–≤—ã–∫–∏ –∏ –æ–ø—ã—Ç –±—É–¥—É—Ç –æ—á–µ–Ω—å —Ü–µ–Ω–Ω—ã–º–∏ –¥–ª—è –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞. –ë—É–¥–µ–º —Ä–∞–¥—ã –æ–±—Å—É–¥–∏—Ç—å –¥–µ—Ç–∞–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞!

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ "–¢–∞—Å–∫–∞"`);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
    formData.append('techSpecFile', fs.createReadStream(techSpecPath), {
      filename: 'tech-spec.txt',
      contentType: 'text/plain'
    });

    console.log('üìã –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã...');

    const response = await axios.post(
      `${API_BASE_URL}/teams/${testTeam.id}/invite`,
      formData,
      {
        headers: {
          'Authorization': `Bearer ${token}`,
          ...formData.getHeaders()
        },
        maxContentLength: Infinity,
        maxBodyLength: Infinity
      }
    );

    console.log('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å —Ñ–∞–π–ª–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:', response.data);
    
    console.log('\nüìã –î–µ—Ç–∞–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:');
    console.log(`   - –ö–æ–º–∞–Ω–¥–∞: ${response.data.data.teamName}`);
    console.log(`   - –ü–æ–ª—É—á–∞—Ç–µ–ª—å: ${response.data.data.receiverName}`);
    console.log(`   - –¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞: ${response.data.data.projectType}`);
    console.log(`   - –°—Ç–∞–≤–∫–∞: ${response.data.data.rate}`);
    console.log(`   - –§–∞–π–ª –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω: ${response.data.data.hasFile ? '–î–∞' : '–ù–µ—Ç'}`);
    console.log(`   - ID –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è: ${response.data.invitationId}`);

    console.log('\nüéâ –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–π —Ñ–æ—Ä–º—ã —Å —Ñ–∞–π–ª–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
    if (error.response?.data) {
      console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
    }
  }
}

testInvitationForm(); 