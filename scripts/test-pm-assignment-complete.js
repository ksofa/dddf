const { db } = require('../src/config/firebase');

async function testPMAssignmentComplete() {
  try {
    console.log('üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è PM...\n');

    // 1. –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–∞
    console.log('üîÑ –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–∞...');
    const fullApplicationData = {
      fullName: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
      phone: '+7 (495) 123-45-67',
      email: 'ivan.petrov@example.com',
      projectTitle: '–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä–æ–µ–∫—Ç',
      projectDescription: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–∞',
      techSpec: 'React, Node.js, PostgreSQL',
      type: 'client_request',
      status: 'pending',
      createdAt: new Date(),
      assignedPM: null,
      teamMembers: []
    };

    const fullAppRef = await db.collection('applications').add(fullApplicationData);
    console.log('‚úÖ –ó–∞—è–≤–∫–∞ —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Å–æ–∑–¥–∞–Ω–∞:', fullAppRef.id);

    // 2. –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–∫–∞–∫ –≤ —Ç–µ—Å—Ç–∞—Ö)
    console.log('üîÑ –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...');
    const minimalApplicationData = {
      type: 'client_request',
      projectTitle: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø—Ä–æ–µ–∫—Ç',
      projectDescription: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏',
      budget: 50000,
      deadline: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 –¥–Ω–µ–π
      status: 'pending',
      senderId: 'test-client-id',
      createdAt: new Date(),
      updatedAt: new Date()
    };

    const minimalAppRef = await db.collection('applications').add(minimalApplicationData);
    console.log('‚úÖ –ó–∞—è–≤–∫–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Å–æ–∑–¥–∞–Ω–∞:', minimalAppRef.id);

    // 3. –ù–∞–π–¥–µ–º PM
    const pmSnapshot = await db.collection('users')
      .where('roles', 'array-contains', 'pm')
      .limit(1)
      .get();

    if (pmSnapshot.empty) {
      console.log('‚ùå –ù–µ—Ç PM –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
      return;
    }

    const pmDoc = pmSnapshot.docs[0];
    console.log('‚úÖ –ù–∞–π–¥–µ–Ω PM:', pmDoc.id);

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ PM –¥–ª—è –∑–∞—è–≤–∫–∏ —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    console.log('\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ PM –¥–ª—è –∑–∞—è–≤–∫–∏ —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...');
    
    const fullAppData = fullApplicationData;
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º customerInfo —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ undefined –∑–Ω–∞—á–µ–Ω–∏—è
    const customerInfo = {};
    if (fullAppData.fullName !== undefined) {
      customerInfo.fullName = fullAppData.fullName;
    }
    if (fullAppData.phone !== undefined) {
      customerInfo.phone = fullAppData.phone;
    }
    if (fullAppData.email !== undefined) {
      customerInfo.email = fullAppData.email;
    }

    const fullProjectData = {
      title: fullAppData.projectTitle,
      description: fullAppData.projectDescription,
      status: 'active',
      pmId: pmDoc.id,
      manager: pmDoc.id,
      customerId: null,
      customerInfo: Object.keys(customerInfo).length > 0 ? customerInfo : null,
      rate: fullAppData.rate || '–î–æ–≥–æ–≤–æ—Ä–Ω–∞—è',
      startDate: fullAppData.startDate || null,
      estimatedDuration: fullAppData.estimatedDuration || null,
      estimatedDurationUnit: fullAppData.estimatedDurationUnit || 'months',
      coverLetter: fullAppData.coverLetter || '',
      team: [pmDoc.id],
      teamMembers: [pmDoc.id],
      techSpec: fullAppData.techSpec || '',
      techSpecFile: fullAppData.techSpecFile || null,
      createdAt: new Date(),
      createdFrom: 'application',
      applicationId: fullAppRef.id
    };

    const fullProjectRef = await db.collection('projects').add(fullProjectData);
    console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Å–æ–∑–¥–∞–Ω:', fullProjectRef.id);
    console.log('üìã customerInfo:', fullProjectData.customerInfo);

    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ PM –¥–ª—è –∑–∞—è–≤–∫–∏ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    console.log('\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ PM –¥–ª—è –∑–∞—è–≤–∫–∏ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...');
    
    const minimalAppData = minimalApplicationData;
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º customerInfo —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ undefined –∑–Ω–∞—á–µ–Ω–∏—è
    const minimalCustomerInfo = {};
    if (minimalAppData.fullName !== undefined) {
      minimalCustomerInfo.fullName = minimalAppData.fullName;
    }
    if (minimalAppData.phone !== undefined) {
      minimalCustomerInfo.phone = minimalAppData.phone;
    }
    if (minimalAppData.email !== undefined) {
      minimalCustomerInfo.email = minimalAppData.email;
    }

    const minimalProjectData = {
      title: minimalAppData.projectTitle,
      description: minimalAppData.projectDescription,
      status: 'active',
      pmId: pmDoc.id,
      manager: pmDoc.id,
      customerId: null,
      customerInfo: Object.keys(minimalCustomerInfo).length > 0 ? minimalCustomerInfo : null,
      rate: minimalAppData.rate || '–î–æ–≥–æ–≤–æ—Ä–Ω–∞—è',
      startDate: minimalAppData.startDate || null,
      estimatedDuration: minimalAppData.estimatedDuration || null,
      estimatedDurationUnit: minimalAppData.estimatedDurationUnit || 'months',
      coverLetter: minimalAppData.coverLetter || '',
      team: [pmDoc.id],
      teamMembers: [pmDoc.id],
      techSpec: minimalAppData.techSpec || '',
      techSpecFile: minimalAppData.techSpecFile || null,
      createdAt: new Date(),
      createdFrom: 'application',
      applicationId: minimalAppRef.id
    };

    const minimalProjectRef = await db.collection('projects').add(minimalProjectData);
    console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Å–æ–∑–¥–∞–Ω:', minimalProjectRef.id);
    console.log('üìã customerInfo:', minimalProjectData.customerInfo);

    // 6. –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã –∑–∞—è–≤–æ–∫
    console.log('\nüîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã –∑–∞—è–≤–æ–∫...');
    
    await db.collection('applications').doc(fullAppRef.id).update({
      status: 'approved',
      approvedAt: new Date(),
      approvedBy: 'test-admin-uid',
      projectId: fullProjectRef.id,
      assignedPM: pmDoc.id
    });

    await db.collection('applications').doc(minimalAppRef.id).update({
      status: 'approved',
      approvedAt: new Date(),
      approvedBy: 'test-admin-uid',
      projectId: minimalProjectRef.id,
      assignedPM: pmDoc.id
    });

    console.log('‚úÖ –°—Ç–∞—Ç—É—Å—ã –∑–∞—è–≤–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
    console.log('- –ó–∞—è–≤–∫–∞ —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: –ø—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω —Å customerInfo');
    console.log('- –ó–∞—è–≤–∫–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: –ø—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω —Å customerInfo = null');
    console.log('- –û–±–∞ —Å–ª—É—á–∞—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –±–µ–∑ –æ—à–∏–±–æ–∫ Firestore');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    console.error('üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.message);
  }
}

async function main() {
  await testPMAssignmentComplete();
  console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
  process.exit(0);
}

main().catch(console.error); 