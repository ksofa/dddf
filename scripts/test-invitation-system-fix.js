const axios = require('axios');

const BASE_URL = 'http://localhost:3000/api';

// –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
const PM_USER = {
  email: 'pm@test.test',
  password: 'password123'
};

const EXECUTOR_USER = {
  email: 'executor5@test.test', 
  password: 'password123'
};

let pmToken = '';
let executorToken = '';
let testProjectId = '';

async function login(email, password) {
  try {
    const response = await axios.post(`${BASE_URL}/auth/login`, {
      email,
      password
    });
    return response.data.token;
  } catch (error) {
    console.error(`Login failed for ${email}:`, error.response?.data || error.message);
    throw error;
  }
}

async function testInvitationSystemFixed() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π...\n');

  try {
    // 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è PM
    console.log('1Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è PM...');
    pmToken = await login(PM_USER.email, PM_USER.password);
    console.log('‚úÖ PM –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ\n');

    // 2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    console.log('2Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è...');
    executorToken = await login(EXECUTOR_USER.email, EXECUTOR_USER.password);
    console.log('‚úÖ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ\n');

    // 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤ PM
    console.log('3Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤ PM...');
    const projectsResponse = await axios.get(`${BASE_URL}/projects`, {
      headers: { Authorization: `Bearer ${pmToken}` }
    });
    
    if (projectsResponse.data.length === 0) {
      throw new Error('–£ PM –Ω–µ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    }
    
    testProjectId = projectsResponse.data[0].id;
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –ø—Ä–æ–µ–∫—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${projectsResponse.data[0].name} (ID: ${testProjectId})\n`);

    // 4. –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    console.log('4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é...');
    const invitationResponse = await axios.post(
      `${BASE_URL}/projects/${testProjectId}/send-invitation`,
      {
        executorId: 'QH040Apx3segNZ9zHJrLP8y4UPD2', // ID executor5@test.test
        message: '–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ–µ–∫—Ç–∞ (—Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã)'
      },
      {
        headers: { Authorization: `Bearer ${pmToken}` }
      }
    );
    console.log('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ\n');

    // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π —É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    console.log('5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π —É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è...');
    const invitationsResponse = await axios.get(`${BASE_URL}/invitations?status=pending`, {
      headers: { Authorization: `Bearer ${executorToken}` }
    });
    
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π: ${invitationsResponse.data.length}`);
    if (invitationsResponse.data.length > 0) {
      const invitation = invitationsResponse.data[0];
      console.log(`üìù –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ: ${invitation.message}`);
      console.log(`üè¢ –ü—Ä–æ–µ–∫—Ç: ${invitation.projectName}`);
      console.log(`üë§ –û—Ç: ${invitation.senderName}`);
      console.log('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤–∏–¥–Ω–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é\n');

      // 6. –ü—Ä–∏–Ω—è—Ç–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
      console.log('6Ô∏è‚É£ –ü—Ä–∏–Ω—è—Ç–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è...');
      const acceptResponse = await axios.post(
        `${BASE_URL}/invitations/${invitation.id}/accept`,
        {},
        {
          headers: { Authorization: `Bearer ${executorToken}` }
        }
      );
      console.log(`‚úÖ ${acceptResponse.data.message}\n`);

      // 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è
      console.log('7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è...');
      const pendingInvitations = await axios.get(`${BASE_URL}/invitations?status=pending`, {
        headers: { Authorization: `Bearer ${executorToken}` }
      });
      
      const acceptedInvitations = await axios.get(`${BASE_URL}/invitations?status=accepted`, {
        headers: { Authorization: `Bearer ${executorToken}` }
      });
      
      console.log(`üìä –û–∂–∏–¥–∞—é—â–∏—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π: ${pendingInvitations.data.length}`);
      console.log(`üìä –ü—Ä–∏–Ω—è—Ç—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π: ${acceptedInvitations.data.length}`);
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n');

    } else {
      console.log('‚ùå –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã —É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è\n');
    }

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö:', error.response?.data || error.message);
    if (error.response?.status) {
      console.error(`HTTP Status: ${error.response.status}`);
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testInvitationSystemFixed(); 