const { db } = require('./src/config/firebase');

async function createPMProjects() {
  try {
    const pmUsers = [
      "5W6YYoii6HYhwWaI4zZSz15siSA3", // pm@test.test
      "FggZKBQWlXYCEpRt57ILVioasm32", // pm@test.com (–°–æ—Ñ—å—è)
    ];

    const projectTemplates = [
      {
        title: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏",
        description: "–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –∑–∞–¥–∞—á–∞–º–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º React –∏ Node.js",
        status: "active",
        clientCompany: "–û–û–û –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
        clientContact: "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤",
        clientEmail: "ivan@tech.com",
        clientPhone: "+7 (999) 123-45-67"
      },
      {
        title: "–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –µ–¥—ã",
        description: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∑–∞–∫–∞–∑–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –µ–¥—ã —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º",
        status: "active", 
        clientCompany: "–ë—ã—Å—Ç—Ä–∞—è –î–æ—Å—Ç–∞–≤–∫–∞",
        clientContact: "–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞",
        clientEmail: "maria@delivery.com",
        clientPhone: "+7 (999) 987-65-43"
      }
    ];

    for (let i = 0; i < pmUsers.length; i++) {
      const pmId = pmUsers[i];
      const template = projectTemplates[i % projectTemplates.length];
      
      const projectData = {
        ...template,
        pmId: pmId,
        teamLead: pmId,
        manager: pmId,
        teamMembers: [pmId],
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString(),
        createdBy: pmId
      };

      const projectRef = await db.collection('projects').add(projectData);
      console.log(`‚úÖ Created project "${template.title}" for PM ${pmId}: ${projectRef.id}`);

      // –°–æ–∑–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
      const defaultColumns = [
        { name: "–ë—ç–∫–ª–æ–≥", order: 0 },
        { name: "–ù—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å", order: 1 },
        { name: "–í —Ä–∞–±–æ—Ç–µ", order: 2 },
        { name: "–ü—Ä–∞–≤–∫–∏", order: 3 },
        { name: "–ì–æ—Ç–æ–≤–æ", order: 4 },
      ];

      for (const column of defaultColumns) {
        await db.collection('projects')
          .doc(projectRef.id)
          .collection('columns')
          .add({
            ...column,
            createdAt: new Date(),
            createdBy: pmId
          });
      }

      // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–¥–∞—á
      const demoTasks = [
        {
          text: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã",
          status: "done",
          column: "done"
        },
        {
          text: "–î–∏–∑–∞–π–Ω –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã",
          status: "done", 
          column: "done"
        },
        {
          text: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ API –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏",
          status: "in_progress",
          column: "in_progress"
        },
        {
          text: "–í–µ—Ä—Å—Ç–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤",
          status: "todo",
          column: "todo"
        },
        {
          text: "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π",
          status: "backlog",
          column: "backlog"
        }
      ];

      for (const task of demoTasks) {
        await db.collection('projects')
          .doc(projectRef.id)
          .collection('tasks')
          .add({
            ...task,
            assignee: pmId,
            createdAt: new Date(),
            createdBy: pmId,
            updatedAt: new Date()
          });
      }

      console.log(`  üìã Created columns and tasks for project ${projectRef.id}`);
    }

    console.log('\nüéâ Successfully created test projects for PM users!');
    process.exit(0);
  } catch (error) {
    console.error('Error creating projects:', error);
    process.exit(1);
  }
}

createPMProjects(); 