import React, { useState, useEffect } from "react";
import { Badge } from "../../../../components/ui/badge";
import { useAuth } from "../../../../hooks/useAuth";
import { useNotifications } from "../../../../hooks/useNotifications";
import { getTasks, Task } from "../../../../api/tasks";
import { getInvitations, Invitation, acceptInvitation, declineInvitation } from "../../../../api/invitations";
import { getProjects, Project } from "../../../../api/projects";
import { getTeams, Team } from "../../../../api/teams";

interface MainMenuProps {
  onViewChange: (view: string) => void;
  activeView: string;
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–µ–Ω—é –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏
const roleMenuConfig = {
  admin: [
    { 
      id: "chats", 
      label: "–ß–∞—Ç—ã", 
      icon: "üí¨",
      color: "bg-blue-500",
      hasNotifications: true
    },
    { 
      id: "applications", 
      label: "–ó–∞—è–≤–∫–∏", 
      icon: "üìã",
      color: "bg-orange-500",
      hasNotifications: false
    }
  ],
  pm: [
    { 
      id: "chats", 
      label: "–ß–∞—Ç—ã", 
      icon: "üí¨",
      color: "bg-blue-500",
      hasNotifications: true
    },
    { 
      id: "invitations", 
      label: "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è", 
      icon: "üì®",
      color: "bg-purple-500",
      hasNotifications: true
    }
  ],
  executor: [
    { 
      id: "chats", 
      label: "–ß–∞—Ç—ã", 
      icon: "üí¨",
      color: "bg-blue-500",
      hasNotifications: true
    },
    { 
      id: "invitations", 
      label: "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è", 
      icon: "üì®",
      color: "bg-purple-500",
      hasNotifications: true
    }
  ],
  customer: [
    { 
      id: "chats", 
      label: "–ß–∞—Ç—ã", 
      icon: "üí¨",
      color: "bg-blue-500",
      hasNotifications: true
    }
  ]
};

export const MainMenu = ({ onViewChange, activeView }: MainMenuProps): JSX.Element => {
  const { user } = useAuth();
  const { unreadCount } = useNotifications();
  const [tasks, setTasks] = useState<Task[]>([]);
  const [invitations, setInvitations] = useState<Invitation[]>([]);
  const [projects, setProjects] = useState<Project[]>([]);
  const [teams, setTeams] = useState<Team[]>([]);
  const [loading, setLoading] = useState(true);
  const [notification, setNotification] = useState<{ message: string; type: 'success' | 'error' } | null>(null);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –º–µ–Ω—é
  const getUserRole = () => {
    if (!user?.roles || user.roles.length === 0) return 'customer';
    
    // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Ä–æ–ª–µ–π
    if (user.roles.includes('admin')) return 'admin';
    if (user.roles.includes('pm')) return 'pm';
    if (user.roles.includes('executor')) return 'executor';
    return 'customer';
  };

  const userRole = getUserRole();
  const menuItems = roleMenuConfig[userRole] || roleMenuConfig.customer;

  useEffect(() => {
    loadData();
  }, []);

  const loadData = async () => {
    try {
      setLoading(true);
      
      const promises = [
        getTasks().catch(() => []),
        getInvitations().catch(() => []),
        getProjects().catch(() => []),
        getTeams().catch(() => [])
      ];

      const [tasksData, invitationsData, projectsData, teamsData] = await Promise.all(promises);
      
      setTasks(tasksData);
      setInvitations(invitationsData);
      setProjects(projectsData);
      setTeams(teamsData);
      
    } catch (error) {
      console.error('Error loading data:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleAcceptInvitation = async (invitationId: string) => {
    try {
      await acceptInvitation(invitationId);
      setNotification({ message: '–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ!', type: 'success' });
      await loadData();
    } catch (error) {
      console.error('Error accepting invitation:', error);
      setNotification({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è', type: 'error' });
    }
  };

  const handleDeclineInvitation = async (invitationId: string) => {
    try {
      await declineInvitation(invitationId);
      setNotification({ message: '–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ', type: 'success' });
      await loadData();
    } catch (error) {
      console.error('Error declining invitation:', error);
      setNotification({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è', type: 'error' });
    }
  };

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
  React.useEffect(() => {
    if (notification) {
      const timer = setTimeout(() => {
        setNotification(null);
      }, 3000);
      return () => clearTimeout(timer);
    }
  }, [notification]);

  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
          <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
        </div>
      </div>
    );
  }

  const userName = user?.fullName || user?.displayName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
  const firstName = userName.split(' ')[0];
  const activeProjects = projects.filter(p => p.status !== 'completed').length;
  const teamCount = teams.length;
  const todayTasks = tasks.filter(task => {
    const today = new Date().toDateString();
    return new Date(task.dueDate).toDateString() === today;
  });
  const pendingInvitations = invitations.filter(inv => inv.status === 'pending');

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
      {notification && (
        <div className={`fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg ${
          notification.type === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'
        }`}>
          {notification.message}
        </div>
      )}

      <div className="max-w-7xl mx-auto">
        {/* –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        <div className="bg-white rounded-2xl p-8 mb-6 shadow-sm">
          <div className="flex items-center gap-6">
            <div className="relative">
              <div className="w-24 h-24 rounded-full bg-gradient-to-br from-blue-400 to-purple-500 flex items-center justify-center text-white font-bold text-3xl shadow-lg">
                {userName.charAt(0).toUpperCase()}
              </div>
              <div className="absolute -bottom-2 -right-2 bg-green-500 text-white text-sm font-bold px-2 py-1 rounded-full">
                8.8
              </div>
            </div>
            
            <div className="flex-1">
              <div className="flex items-center gap-3 mb-2">
                <span className="bg-red-100 text-red-800 text-sm px-3 py-1 rounded-full">–ó–∞–Ω—è—Ç</span>
                <span className="bg-green-100 text-green-800 text-sm px-3 py-1 rounded-full">–î–æ—Å—Ç—É–ø–µ–Ω —Å 13 –¥–æ 18</span>
              </div>
              
              <h1 className="text-3xl font-bold text-gray-800 mb-2">
                –ü—Ä–∏–≤–µ—Ç, {firstName} –ö.
              </h1>
              
              <div className="flex items-center gap-8">
                <div className="text-center">
                  <div className="text-2xl font-bold text-gray-800">{activeProjects}</div>
                  <div className="text-sm text-gray-600">–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã</div>
                </div>
                <div className="text-center">
                  <div className="text-2xl font-bold text-gray-800">{teamCount}</div>
                  <div className="text-sm text-gray-600">–£—á–∞—Å—Ç–Ω–∏–∫ –∫–æ–º–∞–Ω–¥</div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ */}
          <div className="lg:col-span-2 space-y-6">
            {/* –ù–∞ —Å–µ–≥–æ–¥–Ω—è */}
            <div className="bg-white rounded-2xl p-6 shadow-sm">
              <div className="flex items-center justify-between mb-6">
                <h2 className="text-xl font-bold text-gray-800">–ù–∞ —Å–µ–≥–æ–¥–Ω—è:</h2>
                <span className="bg-blue-100 text-blue-800 text-sm font-medium px-3 py-1 rounded-full">
                  {todayTasks.length + 6}
                </span>
              </div>

              {/* –ó–∞–¥–∞—á–∏ */}
              <div className="mb-6">
                <h3 className="text-lg font-semibold text-gray-700 mb-4">–ó–∞–¥–∞—á–∏:</h3>
                <div className="space-y-3">
                  {tasks.slice(0, 3).map((task, index) => (
                    <div key={task.id || index} className="flex items-center gap-4 p-3 hover:bg-gray-50 rounded-lg">
                      <span className="text-sm font-medium text-blue-600 min-w-[50px]">
                        {new Date(task.dueDate).toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' })}
                      </span>
                      <span className="text-gray-800">{task.title}</span>
                    </div>
                  ))}
                  {tasks.length === 0 && (
                    <>
                      <div className="flex items-center gap-4 p-3 hover:bg-gray-50 rounded-lg">
                        <span className="text-sm font-medium text-blue-600 min-w-[50px]">10:17</span>
                        <span className="text-gray-800">–í–µ—Ä—Å—Ç–∫–∞ –¥–∏–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞ –∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–∏—Å–∫–∞</span>
                      </div>
                      <div className="flex items-center gap-4 p-3 hover:bg-gray-50 rounded-lg">
                        <span className="text-sm font-medium text-blue-600 min-w-[50px]">12:35</span>
                        <span className="text-gray-800">–î–æ—Ä–∞–±–æ—Ç–∫–∞ –¢–ó, —É–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ –ø—Ä–æ—Ä–∞–±–æ—Ç–∫—É...</span>
                      </div>
                      <div className="flex items-center gap-4 p-3 hover:bg-gray-50 rounded-lg">
                        <span className="text-sm font-medium text-blue-600 min-w-[50px]">14:00</span>
                        <span className="text-gray-800">–î–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É —Å–µ—Ä–≤–∏—Å—É</span>
                      </div>
                    </>
                  )}
                </div>
              </div>

              {/* –ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ */}
              <div>
                <h3 className="text-lg font-semibold text-gray-700 mb-4">–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏:</h3>
                <div className="space-y-3">
                  <div className="flex items-center gap-4 p-3 hover:bg-gray-50 rounded-lg">
                    <span className="text-sm font-medium text-blue-600 min-w-[50px]">10:17</span>
                    <span className="text-gray-800">–û–±—Å—É–∂–¥–µ–Ω–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏</span>
                  </div>
                  <div className="flex items-center gap-4 p-3 hover:bg-gray-50 rounded-lg">
                    <span className="text-sm font-medium text-blue-600 min-w-[50px]">12:35</span>
                    <span className="text-gray-800">–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø—Ä–∏–Ω—Ç–∞</span>
                  </div>
                  <div className="flex items-center gap-4 p-3 hover:bg-gray-50 rounded-lg">
                    <span className="text-sm font-medium text-blue-600 min-w-[50px]">14:00</span>
                    <span className="text-gray-800">–°—Ç–µ–Ω–¥–∞–ø</span>
                  </div>
                </div>
              </div>

              <button 
                onClick={() => onViewChange('tasks')}
                className="w-full mt-6 py-3 text-blue-600 hover:text-blue-700 font-medium transition-colors"
              >
                –í–µ—Å—å —Å–ø–∏—Å–æ–∫
              </button>
            </div>

            {/* –°–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ - —Ç–æ–ª—å–∫–æ –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π */}
            {userRole === 'executor' && (
              <div className="bg-white rounded-2xl p-6 shadow-sm">
                <div className="flex items-center justify-between mb-6">
                  <h2 className="text-xl font-bold text-gray-800">–°–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ</h2>
                  <span className="bg-red-100 text-red-800 text-sm font-medium px-3 py-1 rounded-full">7</span>
                </div>

                <div className="space-y-4">
                  <div className="flex items-start gap-4 p-4 border border-red-200 rounded-lg bg-red-50">
                    <div className="w-6 h-6 bg-red-500 rounded-full flex items-center justify-center text-white text-sm font-bold">!</div>
                    <div className="flex-1">
                      <div className="font-medium text-gray-800 mb-1">DasyTroon - –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –ø–æ–¥—à–∏–ø–Ω–∏–∫–æ–≤</div>
                      <div className="text-sm text-gray-600">‚è∞ 12 —á–∞—Å–æ–≤ 17 –º–∏–Ω—É—Ç</div>
                    </div>
                    <button className="text-blue-600 hover:text-blue-700">
                      <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                      </svg>
                    </button>
                  </div>

                  <div className="flex items-start gap-4 p-4 border border-orange-200 rounded-lg bg-orange-50">
                    <div className="w-6 h-6 bg-orange-500 rounded-full flex items-center justify-center text-white text-sm font-bold">!</div>
                    <div className="flex-1">
                      <div className="font-medium text-gray-800 mb-1">–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∏–µ–π</div>
                      <div className="text-sm text-gray-600">‚è∞ 12 —á–∞—Å–æ–≤ 17 –º–∏–Ω—É—Ç</div>
                    </div>
                    <button className="text-blue-600 hover:text-blue-700">
                      <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                      </svg>
                    </button>
                  </div>
                </div>

                <button 
                  onClick={() => onViewChange('important')}
                  className="w-full mt-6 py-3 text-blue-600 hover:text-blue-700 font-medium transition-colors"
                >
                  –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ
                </button>
              </div>
            )}

            {/* –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ –∫–æ–º–∞–Ω–¥—É */}
            <div className="bg-white rounded-2xl p-6 shadow-sm">
              <div className="flex items-center justify-between mb-6">
                <h2 className="text-xl font-bold text-gray-800">–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ –∫–æ–º–∞–Ω–¥—É</h2>
                <span className="bg-purple-100 text-purple-800 text-sm font-medium px-3 py-1 rounded-full">
                  {pendingInvitations.length || 4}
                </span>
              </div>

              <div className="space-y-4">
                {pendingInvitations.length > 0 ? (
                  pendingInvitations.slice(0, 2).map((invitation, index) => (
                    <div key={invitation.id || index} className="border border-gray-200 rounded-lg p-4">
                      <div className="mb-3">
                        <span className="text-sm text-gray-600">–°–æ—Å—Ç–∞–≤:</span>
                      </div>
                      <div className="flex flex-wrap gap-2 mb-3">
                        <span className="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">Front-end</span>
                        <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded">Back-end</span>
                        <span className="bg-purple-100 text-purple-800 text-xs px-2 py-1 rounded">UX/UI –î–∏–∑–∞–π–Ω–µ—Ä</span>
                        <span className="bg-orange-100 text-orange-800 text-xs px-2 py-1 rounded">–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä</span>
                        <span className="bg-pink-100 text-pink-800 text-xs px-2 py-1 rounded">–ê–Ω–∞–ª–∏—Ç–∏–∫</span>
                      </div>
                      <div className="text-sm text-gray-600 mb-3">‚è∞ {Math.floor(Math.random() * 24)} —á–∞—Å–∞ {Math.floor(Math.random() * 60)} –º–∏–Ω—É—Ç</div>
                      <div className="flex items-center justify-between">
                        <span className="text-sm text-gray-600">–†–ü: {invitation.senderName || '–ï–ª–µ–Ω–∞ –í.'} ‚ñº</span>
                        <div className="flex gap-2">
                          <button 
                            onClick={() => handleAcceptInvitation(invitation.id)}
                            className="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors"
                          >
                            –ü—Ä–∏–Ω—è—Ç—å
                          </button>
                          <button 
                            onClick={() => handleDeclineInvitation(invitation.id)}
                            className="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors"
                          >
                            –û—Ç–∫–ª–æ–Ω–∏—Ç—å
                          </button>
                        </div>
                      </div>
                    </div>
                  ))
                ) : (
                  <>
                    <div className="border border-gray-200 rounded-lg p-4">
                      <div className="mb-3">
                        <span className="text-sm text-gray-600">–°–æ—Å—Ç–∞–≤:</span>
                      </div>
                      <div className="flex flex-wrap gap-2 mb-3">
                        <span className="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">Front-end</span>
                        <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded">Back-end</span>
                        <span className="bg-purple-100 text-purple-800 text-xs px-2 py-1 rounded">UX/UI –î–∏–∑–∞–π–Ω–µ—Ä</span>
                        <span className="bg-orange-100 text-orange-800 text-xs px-2 py-1 rounded">–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä</span>
                        <span className="bg-pink-100 text-pink-800 text-xs px-2 py-1 rounded">–ê–Ω–∞–ª–∏—Ç–∏–∫</span>
                      </div>
                      <div className="text-sm text-gray-600 mb-3">‚è∞ 3 —á–∞—Å–∞ 27 –º–∏–Ω—É—Ç</div>
                      <div className="text-sm text-gray-600">–†–ü: –ï–ª–µ–Ω–∞ –í. ‚ñº</div>
                    </div>

                    <div className="border border-gray-200 rounded-lg p-4">
                      <div className="mb-3">
                        <span className="text-sm text-gray-600">–°–æ—Å—Ç–∞–≤:</span>
                      </div>
                      <div className="flex flex-wrap gap-2 mb-3">
                        <span className="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">Front-end</span>
                        <span className="bg-green-100 text-green-800 text-xs px-2 py-1 rounded">Back-end</span>
                        <span className="bg-purple-100 text-purple-800 text-xs px-2 py-1 rounded">UX/UI –î–∏–∑–∞–π–Ω–µ—Ä</span>
                        <span className="bg-orange-100 text-orange-800 text-xs px-2 py-1 rounded">–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä</span>
                        <span className="bg-pink-100 text-pink-800 text-xs px-2 py-1 rounded">–ê–Ω–∞–ª–∏—Ç–∏–∫</span>
                      </div>
                      <div className="text-sm text-gray-600 mb-3">‚è∞ 23 —á–∞—Å–∞ 59 –º–∏–Ω—É—Ç</div>
                      <div className="text-sm text-gray-600">–†–ü: –ï–ª–µ–Ω–∞ –í. ‚ñº</div>
                    </div>
                  </>
                )}
              </div>

              <button 
                onClick={() => onViewChange('invitations')}
                className="w-full mt-6 py-3 text-blue-600 hover:text-blue-700 font-medium transition-colors"
              >
                –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ
              </button>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ */}
          <div className="space-y-6">
            {/* –°–æ–±—ã—Ç–∏—è */}
            <div className="bg-white rounded-2xl p-6 shadow-sm">
              <div className="flex items-center justify-between mb-6">
                <h2 className="text-xl font-bold text-gray-800">–°–æ–±—ã—Ç–∏—è</h2>
                <div className="flex items-center gap-2">
                  <span className="bg-blue-100 text-blue-800 text-sm font-medium px-3 py-1 rounded-full">12</span>
                  <select className="text-sm border border-gray-300 rounded px-2 py-1">
                    <option>–°–µ–≥–æ–¥–Ω—è</option>
                    <option>–ó–∞–≤—Ç—Ä–∞</option>
                    <option>–ù–∞ –Ω–µ–¥–µ–ª–µ</option>
                  </select>
                </div>
              </div>

              <div className="space-y-4">
                <div className="flex items-start gap-3 p-3 hover:bg-gray-50 rounded-lg">
                  <div className="text-sm text-gray-600 min-w-[60px]">18:17</div>
                  <div className="flex-1">
                    <div className="font-medium text-gray-800">–ó–∞–∫–∞–∑—á–∏–∫ –æ—Å—Ç–∞–≤–∏–ª –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ –ø—Ä–æ–µ–∫—Ç—É –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ—Ñ–µ–π–Ω–∏</div>
                    <div className="text-xs text-gray-500 mt-1">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏</div>
                  </div>
                </div>

                <div className="flex items-start gap-3 p-3 hover:bg-gray-50 rounded-lg">
                  <div className="text-sm text-gray-600 min-w-[60px]">16:01</div>
                  <div className="flex-1">
                    <div className="font-medium text-gray-800">–í—ã–ø–æ–ª–Ω–µ–Ω –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤</div>
                    <div className="text-xs text-gray-500 mt-1">–§–∏–Ω–∞–Ω—Å—ã</div>
                  </div>
                </div>

                <div className="flex items-start gap-3 p-3 hover:bg-gray-50 rounded-lg">
                  <div className="text-sm text-gray-600 min-w-[60px]">15:42</div>
                  <div className="flex-1">
                    <div className="font-medium text-gray-800">–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 3 –¥–Ω—è –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞</div>
                    <div className="text-xs text-gray-500 mt-1">–ü—Ä–æ–µ–∫—Ç—ã</div>
                  </div>
                </div>

                <div className="flex items-start gap-3 p-3 hover:bg-gray-50 rounded-lg">
                  <div className="text-sm text-gray-600 min-w-[60px]">14:33</div>
                  <div className="flex-1">
                    <div className="font-medium text-gray-800">–ü—Ä–æ–µ–∫—Ç –±—ã–ª –ø—Ä–∏–Ω—è—Ç –∑–∞–∫–∞–∑—á–∏–∫–æ–º</div>
                    <div className="text-xs text-gray-500 mt-1">–ü—Ä–æ–µ–∫—Ç—ã</div>
                  </div>
                </div>

                <div className="flex items-start gap-3 p-3 hover:bg-gray-50 rounded-lg">
                  <div className="text-sm text-gray-600 min-w-[60px]">13:58</div>
                  <div className="flex-1">
                    <div className="font-medium text-gray-800">–ü—Ä–æ–µ–∫—Ç –≤–µ—Ä–Ω—É–ª–∏ —Å –ø—Ä–∞–≤–∫–∞–º–∏</div>
                    <div className="text-xs text-gray-500 mt-1">–ü—Ä–æ–µ–∫—Ç—ã</div>
                  </div>
                </div>

                <div className="flex items-start gap-3 p-3 hover:bg-gray-50 rounded-lg">
                  <div className="text-sm text-gray-600 min-w-[60px]">12:16</div>
                  <div className="flex-1">
                    <div className="font-medium text-gray-800">–î–µ–¥–ª–∞–π–Ω –ø—Ä–æ—Å—Ä–æ—á–µ–Ω</div>
                    <div className="text-xs text-gray-500 mt-1">–ü—Ä–æ–µ–∫—Ç—ã</div>
                  </div>
                </div>

                <div className="flex items-start gap-3 p-3 hover:bg-gray-50 rounded-lg">
                  <div className="text-sm text-gray-600 min-w-[60px]">12:16</div>
                  <div className="flex-1">
                    <div className="font-medium text-gray-800">–î–æ –¥–µ–¥–ª–∞–π–Ω–∞ –æ—Å—Ç–∞–ª–æ—Å—å 2 –¥–Ω—è</div>
                    <div className="text-xs text-gray-500 mt-1">–ü—Ä–æ–µ–∫—Ç—ã</div>
                  </div>
                </div>
              </div>
            </div>

            {/* –ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–æ–±—ã—Ç–∏–π */}
            <div className="bg-white rounded-2xl p-6 shadow-sm">
              <h2 className="text-xl font-bold text-gray-800 mb-6">–ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–æ–±—ã—Ç–∏–π</h2>
              <div className="bg-gray-100 rounded-lg p-8 text-center">
                <div className="text-4xl mb-4">üìÖ</div>
                <div className="text-gray-600">–ö–∞–ª–µ–Ω–¥–∞—Ä—å –±—É–¥–µ—Ç –∑–¥–µ—Å—å</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}; 